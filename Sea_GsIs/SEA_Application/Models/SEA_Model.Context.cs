//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SEA_Application.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Sea_Entities : DbContext
    {
        public Sea_Entities()
            : base("name=Sea_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetAccountant> AspNetAccountants { get; set; }
        public virtual DbSet<AspNetAnnouncement> AspNetAnnouncements { get; set; }
        public virtual DbSet<AspNetAnnouncement_Subject> AspNetAnnouncement_Subject { get; set; }
        public virtual DbSet<AspNetAssessment> AspNetAssessments { get; set; }
        public virtual DbSet<AspNetAssessmentType> AspNetAssessmentTypes { get; set; }
        public virtual DbSet<AspNetBackGround> AspNetBackGrounds { get; set; }
        public virtual DbSet<AspNetBranch_Admins> AspNetBranch_Admins { get; set; }
        public virtual DbSet<AspNetBranch_Class> AspNetBranch_Class { get; set; }
        public virtual DbSet<AspNetBranchClass_Sections> AspNetBranchClass_Sections { get; set; }
        public virtual DbSet<AspnetBranchClassSubjectSection> AspnetBranchClassSubjectSections { get; set; }
        public virtual DbSet<AspNetBranch> AspNetBranches { get; set; }
        public virtual DbSet<AspNetClass_Courses> AspNetClass_Courses { get; set; }
        public virtual DbSet<AspNetClass> AspNetClasses { get; set; }
        public virtual DbSet<AspnetComment_Head> AspnetComment_Head { get; set; }
        public virtual DbSet<AspnetComment> AspnetComments { get; set; }
        public virtual DbSet<AspNetCoursePackage> AspNetCoursePackages { get; set; }
        public virtual DbSet<AspNetCours> AspNetCourses { get; set; }
        public virtual DbSet<AspNetDepartment> AspNetDepartments { get; set; }
        public virtual DbSet<AspNetEmployee> AspNetEmployees { get; set; }
        public virtual DbSet<AspNetEmployeePosition> AspNetEmployeePositions { get; set; }
        public virtual DbSet<AspNetGender> AspNetGenders { get; set; }
        public virtual DbSet<AspnetGenericBranchClassSubject> AspnetGenericBranchClassSubjects { get; set; }
        public virtual DbSet<AspNetHomeWork> AspNetHomeWorks { get; set; }
        public virtual DbSet<AspnetLesson> AspnetLessons { get; set; }
        public virtual DbSet<AspNetLog> AspNetLogs { get; set; }
        public virtual DbSet<AspNetMessage_Receiver> AspNetMessage_Receiver { get; set; }
        public virtual DbSet<AspNetMessage> AspNetMessages { get; set; }
        public virtual DbSet<AspNetNationality> AspNetNationalities { get; set; }
        public virtual DbSet<AspNetNotification> AspNetNotifications { get; set; }
        public virtual DbSet<AspNetNotification_User> AspNetNotification_User { get; set; }
        public virtual DbSet<AspnetOption> AspnetOptions { get; set; }
        public virtual DbSet<AspNetPackage> AspNetPackages { get; set; }
        public virtual DbSet<AspNetParent> AspNetParents { get; set; }
        public virtual DbSet<AspNetParent_Child> AspNetParent_Child { get; set; }
        public virtual DbSet<AspNetProject> AspNetProjects { get; set; }
        public virtual DbSet<AspnetQuestion> AspnetQuestions { get; set; }
        public virtual DbSet<AspnetQuiz> AspnetQuizs { get; set; }
        public virtual DbSet<AspNetReligion> AspNetReligions { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetSection> AspNetSections { get; set; }
        public virtual DbSet<AspNetSession> AspNetSessions { get; set; }
        public virtual DbSet<AspNetStatu> AspNetStatus { get; set; }
        public virtual DbSet<AspNetStudent_Announcement> AspNetStudent_Announcement { get; set; }
        public virtual DbSet<AspNetStudent_Enrollments> AspNetStudent_Enrollments { get; set; }
        public virtual DbSet<AspNetStudent_Histories> AspNetStudent_Histories { get; set; }
        public virtual DbSet<AspNetStudent_Project> AspNetStudent_Project { get; set; }
        public virtual DbSet<AspNetStudent_Subject> AspNetStudent_Subject { get; set; }
        public virtual DbSet<AspNetStudentAssessment> AspNetStudentAssessments { get; set; }
        public virtual DbSet<AspnetStudentAssignment> AspnetStudentAssignments { get; set; }
        public virtual DbSet<AspnetStudentAssignmentSubmission> AspnetStudentAssignmentSubmissions { get; set; }
        public virtual DbSet<AspnetStudentAttachment> AspnetStudentAttachments { get; set; }
        public virtual DbSet<AspNetStudentHomeWork> AspNetStudentHomeWorks { get; set; }
        public virtual DbSet<AspnetStudentLink> AspnetStudentLinks { get; set; }
        public virtual DbSet<AspNetStudent> AspNetStudents { get; set; }
        public virtual DbSet<AspNetStudentSection> AspNetStudentSections { get; set; }
        public virtual DbSet<AspNetSubjectHomeWork> AspNetSubjectHomeWorks { get; set; }
        public virtual DbSet<AspNetSubject> AspNetSubjects { get; set; }
        public virtual DbSet<AspnetSubjectTopic> AspnetSubjectTopics { get; set; }
        public virtual DbSet<AspNetTeacher_Enrollments> AspNetTeacher_Enrollments { get; set; }
        public virtual DbSet<AspNetTeacher_Histories> AspNetTeacher_Histories { get; set; }
        public virtual DbSet<AspNetTeacher> AspNetTeachers { get; set; }
        public virtual DbSet<AspNetTerm> AspNetTerms { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<AspNetVirtualRole> AspNetVirtualRoles { get; set; }
        public virtual DbSet<CalendarNotification> CalendarNotifications { get; set; }
        public virtual DbSet<Class_ChallanForm> Class_ChallanForm { get; set; }
        public virtual DbSet<ClassFee> ClassFees { get; set; }
        public virtual DbSet<ClassFeeType> ClassFeeTypes { get; set; }
        public virtual DbSet<DurationType> DurationTypes { get; set; }
        public virtual DbSet<Employee_SalaryIncrement> Employee_SalaryIncrement { get; set; }
        public virtual DbSet<Employee_SalaryRecord> Employee_SalaryRecord { get; set; }
        public virtual DbSet<EmployeeAbsentTable> EmployeeAbsentTables { get; set; }
        public virtual DbSet<EmployeeAdvanceSalary> EmployeeAdvanceSalaries { get; set; }
        public virtual DbSet<EmployeeAutoPresent> EmployeeAutoPresents { get; set; }
        public virtual DbSet<EmployeePenalty> EmployeePenalties { get; set; }
        public virtual DbSet<EmployeePenaltyType> EmployeePenaltyTypes { get; set; }
        public virtual DbSet<EmployeeSalary> EmployeeSalaries { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<FeeDateSetting> FeeDateSettings { get; set; }
        public virtual DbSet<FeeDiscount> FeeDiscounts { get; set; }
        public virtual DbSet<GenericSubject> GenericSubjects { get; set; }
        public virtual DbSet<Ledger> Ledgers { get; set; }
        public virtual DbSet<LedgerGroup> LedgerGroups { get; set; }
        public virtual DbSet<LedgerHead> LedgerHeads { get; set; }
        public virtual DbSet<Lesson_Session> Lesson_Session { get; set; }
        public virtual DbSet<Month_Multiplier> Month_Multiplier { get; set; }
        public virtual DbSet<NonRecurringCharge> NonRecurringCharges { get; set; }
        public virtual DbSet<NonRecurringFeeMultiplier> NonRecurringFeeMultipliers { get; set; }
        public virtual DbSet<NonRecurringMonth> NonRecurringMonths { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<PenaltyFee> PenaltyFees { get; set; }
        public virtual DbSet<Quiz_Topic_Questions> Quiz_Topic_Questions { get; set; }
        public virtual DbSet<ruffdata> ruffdatas { get; set; }
        public virtual DbSet<Student_ChallanForm> Student_ChallanForm { get; set; }
        public virtual DbSet<Student_GenericSubjects> Student_GenericSubjects { get; set; }
        public virtual DbSet<Student_Quiz_Scoring> Student_Quiz_Scoring { get; set; }
        public virtual DbSet<StudentChallanForm> StudentChallanForms { get; set; }
        public virtual DbSet<StudentDiscount> StudentDiscounts { get; set; }
        public virtual DbSet<StudentFeeMonth> StudentFeeMonths { get; set; }
        public virtual DbSet<StudentFeeMultiplier> StudentFeeMultipliers { get; set; }
        public virtual DbSet<StudentLessonTracking> StudentLessonTrackings { get; set; }
        public virtual DbSet<StudentPenalty> StudentPenalties { get; set; }
        public virtual DbSet<StudentRecurringFee> StudentRecurringFees { get; set; }
        public virtual DbSet<StudentTestSubject> StudentTestSubjects { get; set; }
        public virtual DbSet<TaskCalendar> TaskCalendars { get; set; }
        public virtual DbSet<Teacher_GenericSubjects> Teacher_GenericSubjects { get; set; }
        public virtual DbSet<TestSubject> TestSubjects { get; set; }
        public virtual DbSet<TimeSetting> TimeSettings { get; set; }
        public virtual DbSet<UserAutoAbsent> UserAutoAbsents { get; set; }
        public virtual DbSet<UserAutoPresent> UserAutoPresents { get; set; }
        public virtual DbSet<Voucher> Vouchers { get; set; }
        public virtual DbSet<VoucherRecord> VoucherRecords { get; set; }
    
        public virtual ObjectResult<string> GetUserRoleById(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetUserRoleById", userIDParameter);
        }
    
        public virtual ObjectResult<GetClassbyTeacher_Result> GetClassbyTeacher(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClassbyTeacher_Result>("GetClassbyTeacher", idParameter);
        }
    
        public virtual ObjectResult<GetProjectList_Result> GetProjectList(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProjectList_Result>("GetProjectList", idParameter);
        }
    
        public virtual ObjectResult<GetStudentDetails_Result> GetStudentDetails(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDetails_Result>("GetStudentDetails", idParameter);
        }
    
        public virtual ObjectResult<ListTotalStudentClass_Result> ListTotalStudentClass(string @class)
        {
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListTotalStudentClass_Result>("ListTotalStudentClass", classParameter);
        }
    
        public virtual ObjectResult<ListTotalStudents_Result> ListTotalStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListTotalStudents_Result>("ListTotalStudents");
        }
    
        public virtual ObjectResult<ListTotalStudents_BranchClass_Result> ListTotalStudents_BranchClass(string @class, string branch)
        {
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListTotalStudents_BranchClass_Result>("ListTotalStudents_BranchClass", classParameter, branchParameter);
        }
    
        public virtual ObjectResult<ShowStudentAttendence_Result> ShowStudentAttendence(Nullable<int> teacherId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowStudentAttendence_Result>("ShowStudentAttendence", teacherIdParameter);
        }
    
        public virtual ObjectResult<LessonAttendance_Result> LessonAttendance(string startDate, string endDate)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LessonAttendance_Result>("LessonAttendance", startDateParameter, endDateParameter);
        }
    }
}
