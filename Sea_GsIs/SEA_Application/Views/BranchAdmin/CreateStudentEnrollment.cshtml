@using SEA_Application.Models;
@model AspNetStudent_Enrollments

    <script>
    $(document).ready(function () {

        $("#SessionName").prop('required', true);
        $("#Status").prop('required', true);
        $("#SessionStartDate").prop('required', true);
        $("#SessionStartDate").prop('type', 'date');
        $("#SessionEndDate").prop('required', true);
        $("#SessionEndDate").prop('type', 'date');


        //$("#SessionStartDate").datepicker({
        //    dateFormat: 'dd/mm/yy',
        //    changeMonth: true,
        //    changeYear: true,
        //    duration: "slow",
        //    yearRange: '1960:2030'
        //});

        //$("#SessionEndDate").datepicker({
        //    dateFormat: 'dd/mm/yy',
        //    changeMonth: true,
        //    changeYear: true,
        //    duration: "slow",
        //    yearRange: '1960:2030'
        //});

        $('#cancel').click(function () {
            window.location.href = '@Url.Action("Dashboard", "Account")';
        });

        $('#SectionId').change(function () {
        $.ajax({
            url: '@Url.Action("GetCoursesFromBranchClassSectionId")',
            data: {
                'id': $(this).val()
            },
            type: 'GET',
            success: function (response) {
                console.log('AJAX SUCCESS. RESPONSE:');
                console.log(response);
                //var json = JSON.parse(response);
                console.log('Response type: ' + typeof response);
                console.log('Response length: ' + response.length);
                if (response.length === 0) {
                    $('#CourseId').html('<option value>No course available</option>"');
                } else {
                    let options = '';
                    for (let course in response) {
                        options += '<option value = ' + response[course]['Id'] + '>' + response[course]['Name'] + '</option>';
                    }
                    $('#CourseId').html(options);
                }
            },
            error: function (xhr, error) {
                console.log('AJAX FAILED. DETAILS: ');
                console.log(xhr);
                console.log(error);
            }
        });

        $.ajax({
            url: '@Url.Action("GetSectionStudents")',
            data: {
                'SectionId': $(this).val()
            },
            type: 'GET',
            success: function (response) {
                console.log(response);
                if (response.length === 0) {
                    $('#StudentId').html('<option value>No Students available</option>"');
                } else {
                    let options = '';
                    $.each(response, function (i, item) {
                        options += '<option value = ' + item.Id + '>' + item.Name + '</option>';
                        
                    });
                    $('#StudentId').html(options);
                }
            }
        });
    });
    });

    function isempty(item) {
        var start = $("#SessionStartDate").val();
        var end = $("#SessionEndDate").val();

        if (start == "" && end == "") {
            $(item).prop('placeholder', "Please add the date");
            $('#submit').prop('disabled', true);
        } else {
            $('#submit').prop('disabled', false);
        }
    }


    function onCancel() {
        $('#cancel').click();
    }
    function onSave() {
        alert("Did you listen to me?")
        $('#FormSubmit').click();
    }

    </script>


@{
    ViewBag.Title = "Create";
}

<h2>Add Student Subject</h2>
<div class="box box-primary">
    <div class="box-body">
        
        <div class="col-md-6 col-sm-6 col-lg-6 tab-pane" style="margin-left:30px;border-radius:8px;margin-top:30px" id="changediv">

            <div class="form-three widget-shadow">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <hr />
                    <div class="box-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.SectionId, new { @class = "col-md-2 control-label" })<span class="red-mark">*</span>
                                <div class="col-md-6">
                                    @Html.DropDownListFor(model => model.SectionId, (IEnumerable<SelectListItem>)ViewBag.SectionId, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StudentId, new { @class = "col-md-2 control-label" })<span class="red-mark">*</span>
                                <div class="col-md-6">
                                    @Html.DropDownList("StudentId", null, "No student selected", new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CourseId, new { @class = "col-md-2 control-label" })<span class="red-mark">*</span>
                                <div class="col-md-6">
                                    @Html.DropDownList("CourseId", null, "No course selected", new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SessionId, new { @class = "col-md-2 control-label" })<span class="red-mark">*</span>
                                <div class="col-md-6">
                                    @Html.DropDownList("SessionId", null, "No session selected", new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.SessionId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                    <button class="col-md-2 form-control" onclick="window.location.href='BranchAdmin/StudentEnrollmentList'" style="border-radius:35px;border:hidden;margin-right:10px;background-color:red;color:white;font-size:11px;width:98px;height:38px;font-family:Montserrat" id="return"><i class="fa fa-arrow-left"></i> &nbsp;&nbsp; Return</button>

                    <input id="FormSubmit" type="submit" value="Save" class="btn btn-primary"  style="border-radius:35px;color:white;border:hidden;background-color:#128edb;font-size:11px;width:98px;height:38px;font-family:Montserrat"/>
                
                }

                <div class="col-md-12 col-sm-12 col-lg-12">
                    <hr />
                    <br />

                    <br /><br /><br />
                </div>

            </div>
        </div>
    </div>

</div>





@*<h4 class="orange"></h4>
<div class="row" style="padding-bottom: 10px; padding-top: 10px; padding-left: 20px; padding-right: 20px;">
    <button class="btn btn-danger pull-left btn-sm" onclick="onCancel()">
        Cancel
    </button>
    <button class="pull-right" style="background-color: transparent; border: none; outline: none; font-size: 20px; color: rgb(89, 89, 89) !important" onclick="onSave()">
        <i class="fa fa-floppy-o"></i>
    </button>
</div>*@

<script>
    $(':input[name = "Classes"]').change(function () {
        if (!$(this).val()) {
            $('#CourseMandatory').css('visibility', 'hidden');
        } else {
            $('#CourseMandatory').css('visibility', 'visible');
        }
    });

    

    function getClasses(id) {
        var classes = '';
        $.ajax({
            url: '/BranchAdmin/GetClassesFromBranchId',
            data: {
                'id': id
            },
            type: 'GET',
            success: function (response) {
                classes = response;
            },
            error: function (xhr, error) {
                console.log('AJAX FAILED. DETAILS: ');
                console.log(xhr);
                console.log(error);
            }
        });
    };
</script>
