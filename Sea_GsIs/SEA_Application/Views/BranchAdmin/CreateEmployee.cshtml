@model SEA_Application.Models.EmployeeViewModel

<script>
    $(document).ready(function () {

        $("#SessionName").prop('required', true);
        $("#Status").prop('required', true);
        $("#SessionStartDate").prop('required', true);
        $("#SessionStartDate").prop('type', 'date');
        $("#SessionEndDate").prop('required', true);
        $("#SessionEndDate").prop('type', 'date');


        //$("#SessionStartDate").datepicker({
        //    dateFormat: 'dd/mm/yy',
        //    changeMonth: true,
        //    changeYear: true,
        //    duration: "slow",
        //    yearRange: '1960:2030'
        //});

        //$("#SessionEndDate").datepicker({
        //    dateFormat: 'dd/mm/yy',
        //    changeMonth: true,
        //    changeYear: true,
        //    duration: "slow",
        //    yearRange: '1960:2030'
        //});

        $('#cancel').click(function () {
            window.location.href = '@Url.Action("Dashboard", "Account")';
        });
    });

    function isempty(item) {
        var start = $("#SessionStartDate").val();
        var end = $("#SessionEndDate").val();

        if (start == "" && end == "") {
            $(item).prop('placeholder', "Please add the date");
            $('#submit').prop('disabled', true);
        } else {
            $('#submit').prop('disabled', false);
        }
    }


    function onCancel() {
        $('#cancel').click();
    }
    function onSave() {
        $('#FormSubmit').click();
    }

</script>
<h4 class="orange">Add Student</h4>
<div class="row" style="padding-bottom: 10px; padding-top: 10px; padding-left: 20px; padding-right: 20px;">
    <button class="btn btn-danger pull-left btn-sm" onclick="onCancel()">
        Cancel
    </button>
    <button class="pull-right" style="background-color: transparent; border: none; outline: none; font-size: 20px; color: rgb(89, 89, 89) !important" onclick="onSave()">
        <i class="fa fa-floppy-o"></i>
    </button>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="box box-primary">
        <div class="box-title"></div>
        <hr />
        <div class="box-body">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="box-primary">
                    <div class="box-header with-border">
                        <h3>Personal Information</h3>
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BirthDate, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NationalityId, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.DropDownList("NationalityId", null, "Select your nationality", new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.NationalityId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ReligionId, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.DropDownList("ReligionId", null, "Select your religion", new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.ReligionId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.GenderId, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.DropDownList("GenderId", null, "Select your gender", new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="box-primary">
                    <div class="box-header with-border">
                        <h3>Contact Information</h3>
                    </div>

                    <div class="box-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Landline, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Landline, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Landline, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CellNo, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.CellNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CellNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <h4>Address</h4>
                        <div class="box-body">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Street, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.City, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.State, new { @class = "col-md-2 control-label" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Country, new { @class = "col-md-2 control-label" })<span class="red-mark">*</span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="box-primary">
                    <div class="box-header with-border">
                        <h3>Branch Information</h3>
                    </div>
                    <div class="box-body">
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.BranchId, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.BranchId, (IEnumerable<SelectListItem>)ViewBag.Branches, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.JoiningDate, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>

                <div class="box-primary">
                    <div class="box-header with-border">
                        <h3>Spouse Inormation</h3>
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SpouseName, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.SpouseName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SpouseName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SpouseHighestDegree, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.SpouseHighestDegree, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SpouseHighestDegree, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SpouseOccupation, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.SpouseOccupation, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SpouseOccupation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <h4>Spouse Address</h4>
                        <div class="box-body">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SpouseStreet, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.SpouseStreet, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SpouseStreet, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SpouseCity, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.SpouseCity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SpouseCity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SpouseState, new { @class = "col-md-2 control-label" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.SpouseState, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SpouseState, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SpouseCountry, new { @class = "col-md-2 control-label" })<span class="red-mark">*</span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.SpouseCountry, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SpouseCountry, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>

                <div class="box-primary">
                    <div class="box-header with-border">
                        <h3>Rank Information</h3>
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PositionId, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.DropDownList("PositionId", null, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RoleId, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.DropDownList("RoleId", null, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="box-primary">
                    <div class="box-header with-border">
                        <h3>Funds Information</h3>
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.GrossSalary, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon"><b>Rs.</b></span>
                                    @Html.EditorFor(model => model.GrossSalary, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.GrossSalary, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BasicSalary, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon"><b>Rs.</b></span>
                                    @Html.EditorFor(model => model.BasicSalary, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.BasicSalary, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MedicalAllowance, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon"><b>Rs.</b></span>
                                    @Html.EditorFor(model => model.MedicalAllowance, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.MedicalAllowance, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Accomodation, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Accomodation)
                                @Html.ValidationMessageFor(model => model.Accomodation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProvidedFund, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon"><b>Rs.</b></span>
                                    @Html.EditorFor(model => model.ProvidedFund, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.ProvidedFund, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Tax, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon"><b>Rs.</b></span>
                                    @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EOP, new { @class = "col-md-2 control-label" }) <span class="red-mark">*</span>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon"><b>Rs.</b></span>
                                    @Html.EditorFor(model => model.EOP, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.EOP, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>


            </div>
        </div>
        <input id="FormSubmit" type="submit" value="Save" class="btn btn-primary" />
    </div>
}

<script>
    $(document).ready(function () {
        $('#GrossSalary').change(function () {
            var value = Number($(this).val());
            $('#BasicSalary').val(value * 0.66);
            $('#MedicalAllowance').val(value * 0.06);
            $('#Accomodation').val(1230);
        });
    });
</script>