@model SEA_Application.Models.TeacherUserEmployeeViewModel

<h3>Create Teacher</h3>

<div class="box box-primary">

    <div class="box-body">
        <div class="row">
            <div class="col-md-10">
                <div class="form-horizontal">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RegistrationNo, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.RegistrationNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RegistrationNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BirthDate, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.JoiningDate, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                            @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NationalityId, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.DropDownList("NationalityId", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReligionId, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.DropDownList("ReligionId", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ReligionId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GenderId, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.DropDownList("GenderId", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Landline, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Landline, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Landline, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CellNo, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.CellNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CellNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GrossSalary, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.GrossSalary, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                            @Html.ValidationMessageFor(model => model.GrossSalary, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BasicSalary, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.BasicSalary, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                            @Html.ValidationMessageFor(model => model.BasicSalary, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MedicalAllowance, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.MedicalAllowance, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                            @Html.ValidationMessageFor(model => model.MedicalAllowance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProvidedFund, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ProvidedFund, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                            @Html.ValidationMessageFor(model => model.ProvidedFund, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EOP, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.EOP, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                            @Html.ValidationMessageFor(model => model.EOP, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Tax, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                            @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BranchId, new { @class = "col-md-2 control-label" })
                        <div class="col-md-6">
                            @Html.DropDownList("BranchId", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-6">
                            <button type="button" id="cancel" btn-back class="btn btn-default" onclick="window.history.back()">Back</button>
                            @Html.ActionLink("Edit", "EditTeacher", new { id = ViewBag.Id }, new { @class = "btn btn-danger" })
                            <button type="button" class="btn btn-danger" data-command-remove>Disable</button>
                        </div>
                    </div>

                </div>
            </div>
            <div class="col-md-2">
                @if (ViewBag.ImagePath != null)
                {
                    <div style="width: 200px; height: 200px;float:right; ">
                        <img class="img-responsive img-rounded shadow" alt="image" src="@Url.Content(ViewBag.ImagePath)" />
                    </div>
                }
            </div>
        </div>
    </div>

</div>

<script>
    $(':input').attr('disabled', 'disabled');
    $('[data-command-remove], [btn-back]').removeAttr('disabled');
</script>

<div id="modal-confirm-delete" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="modal-header">
                    <a class="close" data-dismiss="modal">&times;</a>
                    <h3>Do you really want to delete this teacher?</h3>
                </div>
                <div class="modal-body text-danger">
                    This action is <em>irreversible</em> and will result in the following:
                    <ul>
                        <li>Delete the teacher</li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-button-delete-confirm data-item-id>Delete</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-delete-success" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="modal-header">
                    <a class="close" data-dismiss="modal">&times;</a>
                    <h3>Successfully deleted the teacher</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-delete-error" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="modal-header">
                    <a class="close" data-dismiss="modal">&times;</a>
                    <h3>Could not delete the teacher</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#modal-delete-success').on('hidden.bs.modal', function () {
            location.href = '@Url.Action("TeachersList")';
        });
    });

    (function handleCommandRemove() {
        $('[data-command-remove]').click(function () {
            $('#modal-confirm-delete button[data-button-delete-confirm]').attr('data-item-id', getParameterByName('id'));
            $('#modal-confirm-delete').modal({
                'show': true,
                'keyboard': false,
                'backdrop': false
            });
            return false;
        });

        $('#modal-confirm-delete button[data-button-delete-confirm]').click(function () {
            var id = $(this).attr('data-item-id');
            $(this).attr('data-item-id', '');
            $('#progress-table-update').css('visibility', 'visible');
            $('#modal-confirm-delete').modal('hide');
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteTeacher")',
                data: {
                    'id': id
                },
                success: function (result) {
                    if (result) {
                        $('#modal-delete-success').modal('show');
                    } else {
                        $('#modal-delete-error').modal('show');
                    }
                    $('#progress-table-update').css('visibility', 'hidden');
                },
                error: function (xhr) {
                    $('#modal-delete-error').modal('show');
                    $('#progress-table-update').css('visibility', 'hidden');
                    console.log(xhr.responseText);
                }
            })
        });
    })();
</script>