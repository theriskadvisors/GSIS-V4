@using System.IO
@model SEA_Application.Models.AspNetStudent


<h2>Student Details</h2>

<div class="box box-primary">
    <div class="box-body">
        <div class="row">
            <div class="col-md-10">
                <div class="form-horizontal">

                    <div class="box-title"><h3>Basic Information</h3></div>

                    

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="box-title"><h3>School Information</h3></div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RollNo, new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.RollNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    @{
                        var enrollment = (SEA_Application.Models.AspNetStudent_Enrollments)ViewBag.Enrollment;
                        var studentEnrolled = enrollment != null;
                    }
                    <div class="form-group">
                        <label for="Class" class="control-label col-md-2">Class</label>
                        <div class="col-md-7">

                            @Html.TextBox("Class", enrollment?.AspNetBranchClass_Sections?.AspNetBranch_Class?.AspNetClass?.Name ?? "Not Enrolled", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="Section" class="control-label col-md-2">Class</label>
                        <div class="col-md-7">

                            @Html.TextBox("Section", enrollment?.AspNetBranchClass_Sections?.AspNetSection?.Name ?? "Not Enrolled", new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AspNetBranch, new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.AspNetBranch.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="box-title"><h3>System Details</h3></div>

                    <div class="form-group">
                        <label for="Email" class="control-label col-md-2">Email Address</label>
                        <div class="col-md-7">
                            @Html.TextBox("Email", (string)ViewBag.Email, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="Username" class="control-label col-md-2">Username</label>
                        <div class="col-md-7">
                            @Html.TextBox("Username", (string)ViewBag.Username, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-lg-offset-2 col-md-9">
                            <button type="button" id="cancel" class="btn btn-default" onclick="window.history.back()">Back</button>
                            @Html.ActionLink("Edit", "EditStudent", new { id = Model.Id }, new { @class = "btn btn-danger" })
                            <button type="button" class="btn btn-danger" data-command-remove>Disable</button>
                            @if (studentEnrolled)
                            {
                                @Html.ActionLink("Promote", "PromoteStudent", new { studentId = Model.Id }, new { @class = "btn btn-primary" })

                                <input form="form-demote" type="submit" class="btn btn-danger" value="Demote" />
                            }
                            @*@Html.ActionLink("Promote", "PromoteStudent", new { studentId = Model.Id, classId = branchClassSection?.AspNetBranch_Class?.AspNetClass?.Id ?? 0 }, new { @class = "btn btn-primary" })*@
                        </div>
                    </div>

                </div>
            </div>
            <div class="col-md-2">
                @if (ViewBag.ImagePath != null)
                {
                    <div style="width: 200px; height: 200px;float:right; ">
                        <img class="img-responsive img-rounded shadow" alt="image" src="@Url.Content(ViewBag.ImagePath)" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm("DemoteStudent", "BranchAdmin", FormMethod.Post, new { id = "form-demote", style = "display: none;" }))
{
    @Html.TextBox("DemoteStudentId", Model.Id)
}

<div id="modal-confirm-delete" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="modal-header">
                    <a class="close" data-dismiss="modal">&times;</a>
                    <h3>Do you really want to delete this student?</h3>
                </div>
                <div class="modal-body text-danger">
                    This action is <em>irreversible</em> and will result in the following:
                    <ul>
                        <li>Delete the student</li>
                        <li>Delete the enrollment</li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-button-delete-confirm data-item-id="@Model.Id">Delete</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-delete-success" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="modal-header">
                    <a class="close" data-dismiss="modal">&times;</a>
                    <h3>Successfully deleted the student</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-delete-error" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="modal-header">
                    <a class="close" data-dismiss="modal">&times;</a>
                    <h3>Could not delete the student</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#modal-delete-success').on('hidden.bs.modal', function () {
            location.href = '@Url.Action("StudentsList")';
        });
    });

    (function handleCommandRemove() {
        $('[data-command-remove]').click(function () {
            $('#modal-confirm-delete button[data-button-delete-confirm]').attr('data-item-id', getParameterByName('id'));
            $('#modal-confirm-delete').modal({
                'show': true,
                'keyboard': false,
                'backdrop': false
            });
            return false;
        });

        $('#modal-confirm-delete button[data-button-delete-confirm]').click(function () {
            var id = $(this).attr('data-item-id');
            $(this).attr('data-item-id', '');
            $('#progress-table-update').css('visibility', 'visible');
            $('#modal-confirm-delete').modal('hide');
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteStudent")',
                data: {
                    'id': id
                },
                success: function (result) {
                    if (result) {
                        $('#modal-delete-success').modal('show');
                    } else {
                        $('#modal-delete-error').modal('show');
                    }
                    $('#progress-table-update').css('visibility', 'hidden');
                },
                error: function (xhr) {
                    $('#modal-delete-error').modal('show');
                    $('#progress-table-update').css('visibility', 'hidden');
                    console.log(xhr.responseText);
                }
            })
        });
    })();
</script>