@model SEA_Application.Models.ClassFee
@{

    if (User.IsInRole("Accountant"))
    {
        Layout = "~/Views/Shared/_AccountantDashboardLayout.cshtml";
    }
    else if (User.IsInRole("Accounting_Head"))
    {
        Layout = "~/Views/Shared/_AccountHeadDashboardLayout.cshtml";
    }
    else
    {
        Layout = null;
    }
}
<style>
    #error-tag {
        color: red;
    }

    .color:hover {
        background-color: #0e72af !important;
    }

    .color2:hover {
        background-color: #dc0000 !important;
    }
    #Error
    {
        color:red;
    }
</style>
<script>
    $(document).ready(function () {

        $("#PageHeader").html("Recurring Fee");

        $("#BreadCrumbs").append(' <li> <a href="/FinanceSummary/Index"> Home </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li class=""><a id="BreadCrumps1" href="/StudentRecurringFees/Index">Recurring Fee</a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li class="active"><a id="BreadCrumps1" href="#"> Create </a></li>');

        $.ajax({

            type: "POST",
            cache: false,
            url: "/StudentRecurringFees/AllSession",
            processData: false,
            contentType: false,
            success: function (data) {
                var sch = JSON.parse(data);
                console.log(sch);
                var $el = $("#SessionID");


                if (sch.length > 0) {
                    $el.append($("<option></option>")
                        .attr("value", "").text('Select Session'));
                    for (i = 0; i < sch.length; i++) {

                        $el.append($("<option></option>")
                            .attr("value", sch[i].Id).text(sch[i].Year));
                    }
                }

                else {

                }
            }
        });

        $.ajax({

            type: "POST",
            cache: false,
            url: "/StudentRecurringFees/AllBranches",
            processData: false,
            contentType: false,
            success: function (data) {
                var sch = JSON.parse(data);
                console.log(sch);
                var $el = $("#BranchId");
                $el.empty();
                if (sch.length > 0) {
                    $el.append($("<option></option>")
                        .attr("value", "").text('Select Branch'));
                    for (i = 0; i < sch.length; i++) {

                        $el.append($("<option></option>")
                            .attr("value", sch[i].Id).text(sch[i].Name));
                    }
                }

                else {
                    $el.append($("<option></option>")
                        .attr("value", '').text('Select Branch'));
                }
            }
        });



    //    $('input[type="number"]').on('keyup', function () {

    //        debugger
    //    v = parseInt($(this).val());
    //    min = parseInt($(this).attr('min'));
    //   // max = parseInt($(this).attr('max'));

    //    /*if (v < min){
    //        $(this).val(min);
    //    } else */
    //         if (v > min) {
    //        $(this).val(v);
    //    }
    //})

        $('#BranchId').change(function () {

            $("#Error").html("");
            $("#SaveButton").prop('disabled', false);
            checkRecurringFeeExist();
            var BranchId = $(this).val();

            if (BranchId != "") {


                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/StudentRecurringFees/ClassesByBranch?BranchId=" + BranchId,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $("#ClassId");
                        $el.empty();


                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Class'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select Class'));
                        }
                    }
                });
            }
            else {
                var $el = $("#ClassId");
                $el.empty();

            }

        });


        $('#ClassId').change(function () {

            $("#Error").html("");
            $("#SaveButton").prop('disabled', false);

            checkRecurringFeeExist();
            var ClassId = $(this).val();

            $.post(
                "/StudentRecurringFees/CheckClassDeplication?Id=" + ClassId,
                function (value) {
                    if (value != 'error') {

                        $('#submit').prop("disabled", false);
                        $("#error-tag").hide();
                    }
                    else {

                        $("#error-tag").show();
                        $('#submit').prop("disabled", true);
                    }
                },
                "text"
            );


        });
        $("#total").val(0);
        $(".code").on("keyup", function () {
            TotalFee();
        })

    })

    function TotalFee() {
        debugger

        var TutionFee = $("#TutionFee").val();
        if (TutionFee == "") {

            TutionFee = 0;
        }

        var LabCharges = $("#LabCharges").val();

        if (LabCharges == "") {

            LabCharges = 0;
        }
        var ComputerFee = $("#ComputerFee").val();

        if (ComputerFee == "") {

            ComputerFee = 0;
        }
        var OtherServices = $("#OtherServices").val();
        if (OtherServices == "") {

            OtherServices = 0;
        }

        var AdmissionFee = $("#AdmissionFee").val();
        if (AdmissionFee == "") {

            AdmissionFee = 0;
        }

        Total = parseInt(TutionFee) + parseInt(LabCharges) + parseInt(ComputerFee) + parseInt(AdmissionFee) + parseInt(OtherServices);

        $("#total").val(Total);


    }

    function checkRecurringFeeExist() {

        var BranchId = $("#BranchId").val();
        var ClassId = $("#ClassId").val();

        if (BranchId != "" && ClassId != "") {

            $.ajax({
                type: "POST",
                url: "/StudentRecurringFees/checkRecurringFeeExist",
                data: { "BranchId": BranchId, "ClassId": ClassId },
                success: function (data) {

                    if (data == "") {
                        $("#SaveButton").prop('disabled', false);
                        $("#Error").html("");
                    }
                    else {


                        $("#SaveButton").prop('disabled', true);
                        $("#Error").html(data);

                    }



                }


            })
        }




    }

    //function TotalFee(a) {
    //    var sum = 0;
    //    var total = 0;

    //    //var feetype = parseInt(e);
    //    total = parseInt($("#total").val());
    //    if (isNaN(total)) {
    //        total = 0;
    //        $("#total").val(total);

    //    }

    //    var sum = 0;
    //    $(".code").each(function () {
    //        if (!isNaN(this.value) && this.value.length != 0) {
    //            sum += +$(this).val();
    //        }
    //        $("#total").val(sum);

    //    })
    //}



</script>


<div class="card">
    <div class="card-body p-4">
        <div class="box box-primary">
            <div class="box-body">
                @*<h4>Class Recurring Fee</h4>*@

                @if (ViewBag.ErrorMessage != null)
                {
                    <div style="margin-top:10px">
                        <span class="text-danger">@ViewBag.ErrorMessage</span>

                    </div>
                }
                @using (Html.BeginForm("Create", "StudentRecurringFees", FormMethod.Post, new { id = "Registerform" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @*<hr />*@
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <span class="col-md-2">Branch</span>
                            <div class="col-md-6">
                                <select class="form-control" id="BranchId" name="BranchId" required></select>
                            </div>
                        </div>

                        <div class="form-group">
                            <span class="col-md-2">Class</span>
                            <div class="col-md-6">

                                <select class="form-control" id="ClassId" name="ClassId" required></select>
                                <br />
                                <span id="Error"></span>
                            </div>
                          

                        </div>

                        <div class="form-group">
                            <span class="col-md-2">Session</span>
                            <div class="col-md-6">

                                <select class="form-control" id="SessionID" name="SessionID" required></select>

                            </div>
                        </div>

                        <div class="form-group">

                            <div class="col-md-6">

                                <div class="form-group bmd-form-group my-3">
                                    <label class="bmd-label-floating">Tution  Fee</label>
                                    @Html.EditorFor(model => model.TutionFee, new { htmlAttributes = new {  @type = "number", @Value = 0, @min = 0, @class = "form-control code", @required = true } })
                                    @Html.ValidationMessageFor(model => model.TutionFee, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">

                            <div class="col-md-6">

                                <div class="form-group bmd-form-group my-3">
                                    <label class="bmd-label-floating">Lab Charges</label>
                                    @Html.EditorFor(model => model.LabCharges, new { htmlAttributes = new {  @type = "number", @Value = 0, @min = 0, @class = "form-control code", @required = true } })
                                    @Html.ValidationMessageFor(model => model.LabCharges, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-6">
                                <div class="form-group bmd-form-group my-3">
                                    <label class="bmd-label-floating">Computer Fee</label>
                                    @Html.EditorFor(model => model.ComputerFee, new { htmlAttributes = new {  @type = "number" ,@Value = 0, @min = 0, @class = "form-control code", @required = true } })
                                    @Html.ValidationMessageFor(model => model.ComputerFee, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        @*<div class="form-group">
                                <span class="col-md-2">Lab </span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.SecurityServices, new { htmlAttributes = new { @class = "form-control code" } })
                                    @Html.ValidationMessageFor(model => model.SecurityServices, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                <span class="col-md-2">Transportation</span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Transportation, new { htmlAttributes = new { @class = "form-control code" } })
                                    @Html.ValidationMessageFor(model => model.Transportation, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                <span class="col-md-2">Sports Shirt</span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.SportsShirt, new { htmlAttributes = new { @class = "form-control code" } })
                                    @Html.ValidationMessageFor(model => model.SportsShirt, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <span class="col-md-2">Chinese Class Fee</span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.ChineseClassFee, new { htmlAttributes = new { @class = "form-control code" } })
                                    @Html.ValidationMessageFor(model => model.ChineseClassFee, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                <span class="col-md-2">Advance Tax</span>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.AdvanceTax, new { htmlAttributes = new { @class = "form-control code" } })
                                    @Html.ValidationMessageFor(model => model.AdvanceTax, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">

                            <div class="col-md-6">
                                <div class="form-group bmd-form-group my-3">
                                    <label class="bmd-label-floating">Other</label>
                                    @Html.EditorFor(model => model.OtherServices, new { htmlAttributes = new {  @type = "number", @Value = 0, @min = 0, @class = "form-control code", @required = true } })
                                    @Html.ValidationMessageFor(model => model.OtherServices, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="form-group">

                            <div class="col-md-6">
                                <div class="form-group bmd-form-group my-3">
                                    <label class="bmd-label-floating">Admission Fee</label>
                                    @Html.EditorFor(model => model.AdmissionFee, new { htmlAttributes = new {  @type = "number", @Value = 0, @min = 0, @class = "form-control code", @required = true } })
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            <span class="col-md-2">Total Fee</span>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Total, new { htmlAttributes = new {  @type = "number" ,@class = "form-control", @min = 0, @readonly = "readonly", @id = "total", @required = true } })
                                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <br />


                        <div>
                        </div>
                        </div>
                }

                <div class="col-md-offset-2 col-md-5">
                    <br />
                    @*<button class="col-md-2 form-control color2" onclick="window.location.href = '/StudentRecurringFees/Index'" style="border-radius:35px;border:hidden;background-color:red;margin-right:10px;color:white;font-size:11px;width:98px;height:38px;font-family:Montserrat" id="return"><i class="fa fa-arrow-left"></i> &nbsp;&nbsp; Return</button>
                        <input class="col-md-2 form-control color" id="submit" form="Registerform" type="submit" value="Save" style="border-radius:35px;color:white;border:hidden;background-color:#128edb;font-size:11px;width:98px;height:38px;font-family:Montserrat" />*@

                    <button type="button" onclick="window.location.href = '/StudentRecurringFees/Index'" id="btnCancel" class="btn btn-primary rounded rounded-lg bg-transparent text-muted shadow-none mr-3">
                        <i class="material-icons mr-2">cached</i>  Return
                    </button>

                    <button type="submit" form="Registerform" id="SaveButton" class="btn btn-primary rounded rounded-lg"> Save </button>

                    
                    <br />
                    <br /><br />
                </div>
            </div>
        </div>

    </div>
</div>