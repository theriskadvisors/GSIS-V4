@model SEA_Application.Models.QuestionAnswerViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TeacherDashboardLayout.cshtml";

}
<style>

    input[type='checkbox'] {
        width: 20px;
        height: 20px;
    }

    .checkbox input[type=checkbox], .checkbox-inline input[type=checkbox], .radio input[type=radio], .radio-inline input[type=radio] {
        position: absolute;
        margin-top: 4px\9;
        margin-left: 0px;
    }

    .page-sidebar .page-sidebar-menu, .page-sidebar-closed.page-sidebar-fixed .page-sidebar:hover .page-sidebar-menu {
        list-style: none;
        margin: 0;
        padding: 0;
        height: 1500px !important;
    }
</style>

<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
@*<script src="~/Content/Toggle.js"></script>*@
<script src="~/Content/Toggle.js"></script>

<script>
    $(document).ready(function () {


        $("#PageHeader").html("Edit Lesson Session");

        $("#BreadCrumbs").append(' <li> <a href="/Account/Dashboard"> Home </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li> <a href="/AspnetLessons/LessonSessionView"> Lesson Session </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li class="active"><a id="BreadCrumps1" href="#">Edit</a></li>');

        $("#btnCancel").click(function () {

            window.location.href = "/AspnetLessons/LessonSessionView";
        })
        $("form").submit(function () {

            event.stopPropagation();

            var StartDate = document.getElementById('StartDate').value;
            var EndDate = document.getElementById('DueDate').value;
            var eDate = new Date(EndDate);
            var sDate = new Date(StartDate);


            if (StartDate != '' && EndDate != '' && sDate < eDate) {

                $("#ErrorMsg").html("");

                return true;
            }

            if (StartDate != '' && EndDate != '' && sDate > eDate) {

                $("#ErrorMsg").html("Start Date Should be lesser than Due Date");

                return false;
            }

        });


        //$.ajax({
        //    type: "POST",
        //    cache: false,
        //    url: "/AspnetLessons/LoadSectionIdDDL",
        //    processData: false,
        //    contentType: false,
        //    success: function (data) {
        //        var sch = JSON.parse(data);
        //        $('#SessionId').html("");
        //        debugger
        //        //  $('#Sessions').append('<option value= "">Select </option>');
        //        $('#SessionId').append('<option value="">Select Section</option>');
        //        $.each(sch, function (i, item) {

        //            debugger
        //            $('#SessionId').append('<option value=' + item.Id + '>' + item.SessionName + '</option>');
        //        });

        //    }
        //});


        $('#BranchId').change(function () {

            var BranchId = $(this).val();

            if (BranchId != "") {


                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/ClassesByBranch?BranchId=" + BranchId,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $("#ClassId");
                        $el.empty();
                        var $e2 = $("#SubId");
                        $e2.empty();
                        var $e3 = $(".TopicIdDDL");
                        $e3.empty();
                        var $e4 = $("#SectionId");
                        $e4.empty();
                           var $e10 = $("#LessonId");
                $e10.empty();

                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Class'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select Class'));
                        }
                    }
                });
            }
            else {
                var $el = $("#ClassId");
                $el.empty();
                var $e2 = $("#SubId");
                $e2.empty();
                var $e3 = $(".TopicIdDDL");
                $e3.empty();
                var $e4 = $("#SectionId");
                $e4.empty();
                   var $e10 = $("#LessonId");
                $e10.empty();

            }

        });

        $('#ClassId').change(function () {

            var ClassId = $(this).val();
            //Class = UserName;

            if (ClassId != "") {

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/SectionByClasses?ClassId=" + ClassId,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $(".SubIdDDL");
                        $el.empty();
                        var $e3 = $(".TopicIdDDL");
                        $e3.empty();
                        var $e4 = $("#SectionId");
                        $e4.empty();
                           var $e10 = $("#LessonId");
                $e10.empty();

                        if (sch.length > 0) {
                            $e4.append($("<option></option>")
                                .attr("value", "").text('Select Section'));
                            for (i = 0; i < sch.length; i++) {

                                $e4.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $e4.append($("<option></option>")
                                .attr("value", '').text('Select Section'));
                        }
                    }
                });
            }

            else {

                var $el = $(".SubIdDDL");
                $el.empty();
                var $e3 = $(".TopicIdDDL");
                $e3.empty();

                var $e4 = $("#SectionId");
                $e4.empty();

                   var $e10 = $("#LessonId");
                $e10.empty();

            }

        });
        $('#SectionId').change(function () {

            var SectionId = $(this).val();
            //Class = UserName;

            if (SectionId != "") {

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/SubjectsByClass?SectionId=" + SectionId,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $("#SubId");
                        $el.empty();
                        var $e3 = $(".TopicIdDDL");
                        $e3.empty();
                           var $e10 = $("#LessonId");
                $e10.empty();


                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Subject'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select Subject'));
                        }
                    }
                });
            }

            else {

                var $el = $("#SubId");
                $el.empty();
                var $e3 = $(".TopicIdDDL");
                $e3.empty();
                
                var $e10 = $("#LessonId");
                $e10.empty();


            }

        });



        $('#SubId').change(function () {

            var BranchId = $("#BranchId").val();
            var ClassId = $("#ClassId").val();
            var SectionId = $("#SectionId").val();
            var SubjectId = $(this).val();

            if (SubjectId != "" && BranchId != "" && ClassId != "") {

                $.ajax({
                    type: "POST",
                    cache: false,
                    //url: "/AspNetProject/GetTopic?BranchId=" + subid,
                    url: "/AspNetProject/GetSubjects?BranchId=" + BranchId + "&&ClassId=" + ClassId + "&&SubjectId=" + SubjectId + "&&SectionId=" + SectionId,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $(".TopicIdDDL");
                        $el.empty();
                        var $e1 = $("#LessonId");
                        $e1.empty();

                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Topic'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select'));
                        }
                    }
                });

            }
            else {

                var $el = $(".TopicIdDDL");
                $el.empty();

                var $e1 = $("#LessonId");
                $e1.empty();


            }

        });


        $("#TopicId").change(function () {

            var TopicId = $(this).val();


            if (TopicId != "") {

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/GetLessons?TopicId=" + TopicId,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $("#LessonId");
                        $el.empty();

                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Lesson'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select Lesson'));
                        }
                    }
                });
            }

            else {

                var $el = $("#LessonId");
                $el.empty();

            }

        })






    })
</script>



<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body p-5">

                @using (Html.BeginForm("EditLessonSession", "AspnetLessons", FormMethod.Post, new { role = "form" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.AntiForgeryToken()

                    <input type="hidden" name="LessonSessionId" value="@ViewBag.Id" />

                    <div class="row">
                        <div class="col-md-6 pl-5 pr-5 ">



                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select Branch*</label>
                                    @Html.DropDownList("BranchId", null, htmlAttributes: new { @class = "form-control " })
                                    @*<select class="form-control SubIdDDL" id="SubId" name="SubId" required></select>*@
                                </div>
                            </div>


                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select class*</label>
                                    @Html.DropDownList("ClassId", null, htmlAttributes: new { @class = "form-control " })
                                    @*<select class="form-control SubIdDDL" id="SubId" name="SubId" required></select>*@
                                </div>
                            </div>
                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select Section*</label>
                                    @Html.DropDownList("SectionId", null, htmlAttributes: new { @class = "form-control " })
                                    @*<select class="form-control SubIdDDL" id="SubId" name="SubId" required></select>*@
                                </div>
                            </div>
                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select Subject*</label>
                                    @Html.DropDownList("SubId", null, htmlAttributes: new { @class = "form-control SubIdDDL" })
                                    @*<select class="form-control SubIdDDL" id="SubId" name="SubId" required></select>*@
                                </div>
                            </div>

                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select Topic*</label>

                                    @Html.DropDownList("TopicId", null, htmlAttributes: new { @class = "form-control TopicIdDDL" })
                                </div>
                            </div>


                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select Lesson*</label>

                                    @Html.DropDownList("LessonId", null, htmlAttributes: new { @class = "form-control " })
                                </div>
                            </div>

                            <span style="padding:10px"></span>

                            <div class="form-group">
                                Start Date


                                <input type="date" name="StartDate" id="StartDate" value="@ViewBag.LessonStartDate" class="form-control" required />


                            </div>

                            <span style="padding:10px"></span>
                            <div class="form-group">
                                <label>Due Date</label>


                                <input type="date" name="DueDate" id="DueDate" value="@ViewBag.LessonDueDate" class="form-control" required />
                                <span style="color:red;" id="ErrorMsg"></span>



                            </div>

                        </div>



                    </div><!--row end-->




                    <div class="col-md-8 pl-5 pr-5 ">

                        <br />
                        <button type="submit" class="btn btn-primary rounded rounded-lg"> Update </button>


                        <button type="button" id="btnCancel" class="btn btn-primary rounded rounded-lg bg-transparent text-muted shadow-none mr-3">
                            <i class="material-icons mr-2">cached</i>  Cancel
                        </button>

                    </div>



                }


            </div>
        </div>
    </div>
</div>
