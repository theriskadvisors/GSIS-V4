@model SEA_Application.Models.StudentRegistrationViewModel

@{
    ViewBag.Title = "Create";
    if (User.IsInRole("Branch_Admin") || User.IsInRole("Branch_Principal"))
    {
        Layout = "~/Views/Shared/_BranchAdminDashboardLayout.cshtml";
    }
    else if (User.IsInRole("Accountant"))
    {
        Layout = "~/Views/Shared/_AccountantDashboardLayout.cshtml";
    }
}

<style>
    .col-md-2 {
        width: 19.666667%;
    }

    .error {
        color: red !important;
    }

    .content {
        padding: 0px;
    }

    #navbox a:hover {
        background-color: transparent !important;
        color: white;
        border-bottom: 4px solid white;
    }

    #navbox a:focus {
        background-color: transparent !important;
        color: white;
        border-bottom: 4px solid white;
    }

    textarea {
        height: 100px;
        width: 718px;
    }

    span {
        color: #9d9d9d;
    }

    .horizontal_style {
        margin: 0;
        padding: 0;
        border-bottom: 1px solid #d2d2d2;
        border-left: 0;
        border-right: 0;
        border-top: 0;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>



<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body p-5">

                <form id="StudentForm">

                    <div class="row">
                        <div class="col-md-2 pl-3 pr-5">

                            <div style="height: 120px;" class="upload-photo border rounded d-flex align-items-center justify-content-center flex-column mb-4">
                                <a href="#">
                                    @*<img id="imgPreview" src="~/Content/Images/Upload.png" onclick="$('#UploadImg').click();" />*@

                                    @if ( @ViewBag.StudentImage!= null)
                                    {
                                    <img onclick="$('#UploadImg').click();" class="img-responsive" id="imgPreview" style="height:150px;width:150px;" src="~/Content/Images/StudentImages/@ViewBag.StudentImage" />

                                    }
                                    else
                                    {
                                        <img id="imgPreview" src="~/Content/Images/Upload.png" onclick="$('#UploadImg').click();" />
                                    }
                                </a>
                                <input style="display:none;" id="UploadImg" type="file" name="image" />
                                <div id="UploadPhotoDiv" class="mt-3">Upload Photo</div>
                            </div>
                        </div>

                        <div class="col-md-5 pl-5 pr-5 border-right border-color-sea">
                            <h2 class="column-heading mb-4">User Information</h2>

                            <div class="form-group bmd-form-group">
                                @*<label class="bmd-label-floating">Name <span class="red-mark">*</span></label>*@
                                <span>Name</span>


                                <input type="hidden" name="StudentId" id="StudentId" value="@Model.StudentID" />
                                <input type="text" name="FName" value="@Model.FName" id="FName" class="form-control round-border" required />

                                @*@Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })*@


                            </div>
                            <div class="form-group bmd-form-group">
                                @*<label class="bmd-label-floating">Nationality <span class="red-mark">*</span></label>*@
                                <span>Nationality</span>
                                @Html.DropDownList("NationalityId", null, htmlAttributes: new { @class = "form-control round-border" })
                                @Html.ValidationMessageFor(model => model.NationalityId, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group bmd-form-group">
                                <span>Religion</span>
                                @*<label class="bmd-label-floating">Religion <span class="red-mark">*</span></label>*@
                                @Html.DropDownList("ReligionId", null, htmlAttributes: new { @class = "form-control round-border" })
                                @Html.ValidationMessageFor(model => model.ReligionId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group bmd-form-group">
                                @*<label class="bmd-label-floating">Gender <span class="red-mark">*</span></label>*@
                                <span>Gender</span>
                                @Html.DropDownList("GenderId", null, htmlAttributes: new { @class = "form-control round-border" })
                                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group bmd-form-group">
                                @*<label class="bmd-label-floating">Birth Date <span class="red-mark">*</span></label>*@
                                <span>Birth Date</span>
                                @*@Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control round-border", @type = "Date", @required = "required" } })*@

                                <input type="date" name="Birthdate" id="Birthdate" class="form-control" value="@ViewBag.BirthDate" />

                                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })


                            </div>

                            <div class="form-group bmd-form-group">
                                @*<label class="bmd-label-floating">Phone <span class="red-mark">*</span></label>*@
                                <span>Phone</span>
                                @Html.EditorFor(model => model.CellNo, new { htmlAttributes = new { @class = "form-control round-border", @onblur = "checkPhone(this)", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.CellNo, "", new { @class = "text-danger", @id = "Phone-Error" })
                            </div>
                        </div>

                        <div class="col-md-5 pl-5 pr-5 border-right border-color-sea">
                            <h2 class="column-heading mb-4">Account Information</h2>

                            <div class="form-group bmd-form-group my-3 is-filled">
                                @*<label class="bmd-label-floating">Roll Number <span class="red-mark">*</span></label>*@
                                <span>Roll Number</span>
                                <input readonly type="text" id="RollNo" value="@Model.RollNo" class="form-control round-border" name="RollNo" />

                                @*@Html.EditorFor(model => model, new { htmlAttributes = new { @class = "form-control" } })*@


                                <span style="color:red" id="RollNoError"></span>
                            </div>

                            <div class="form-group bmd-form-group">
                                <span>Email</span>
                                <input value="@Model.Email" type="text" name="Email" id="Email" class="form-control" readonly required>
                                <span id="Email-Error" style="color:red"></span>
                                <br />
                                <span id="Email-Error1" style="color:red"></span>
                            </div>

                            @*<div class="form-group bmd-form-group">
                                    <span>Password</span>
                                    <input type="password" name="Password" id="Password" class="form-control" required>
                                    @Html.ValidationMessageFor(model => model.CellNo, "", new { @class = "text-danger", @id = "Password-Error" })
                                </div>

                                <div class="form-group bmd-form-group">
                                    <span>Confirm Password</span>
                                    <input type="password" name="ConfirmPassword" id="CnfmPass" class="form-control" required>
                                    @Html.ValidationMessageFor(model => model.CellNo, "", new { @class = "text-danger !important", @id = "CnfmPass-Error", @style = "color:red" })
                                </div>*@
                        </div>
                        <hr class="mt-5 mb-4">
                    </div> <!-- end of row -->
                    <br>

                    <div class="form-row mt-4">
                        <div class="form-group col-md-6 bmd-form-group">
                            <label for="" class="bmd-label-static pl-2">Select Branch*</label>

                            @*<select class="form-control" id="BranchId" name="BranchId" required></select>*@

                            @Html.DropDownList("BranchId", null, htmlAttributes: new { @class = "form-control round-border", @disabled="disabled" })
                            @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })


                        </div>
                    </div>

                    <div class="form-row mt-4">
                        <div class="form-group col-md-6 bmd-form-group">
                            <label for="" class="bmd-label-static pl-2">Select class *</label>

                            @*<select class="form-control" id="ClassId" name="ClassId" required></select>*@

                            @Html.DropDownList("ClassId", null, htmlAttributes: new { @class = "form-control round-border", @disabled="disabled" })
                            @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })


                        </div>
                    </div>
                    <br>
                    <br>
                    <div class="row">

                        <div class="col-md-4 pl-4 pr-5 border-right border-color-sea">

                            <h4>Fee Heads</h4>
                            <br />
                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">Admission Fee : </label>
                                <input value="@Model.AdmissionFee" class="horizontal_style code" required id="AdmissionFee" type="number" name="AdmissionFee" />
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">Tution Fee : </label>
                                <input value="@Model.TutionFee" class="horizontal_style code" min="0" required id="TutionFee" type="number" name="TutionFee"  />
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">Lab Fee : </label>
                                <input value="@Model.LabCharges" class="horizontal_style code" min="0" required id="LabFee" type="number" name="LabFee"  />
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">Computer Fee : </label>
                                <input value="@Model.ComputerFee" class="horizontal_style code" min="0" required id="ComputerFee" type="number" name="ComputerFee"  />
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">Other Services : </label>
                                <input value="@Model.OtherServices" class="horizontal_style code" min="0" required id="OtherServices" type="number" name="OtherServices"  />
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">Total : </label>
                                <input value="@Model.TotalFee" style="background:#C0C0C0;" min="0" readonly class="horizontal_style" required id="FeesHeadTotal" type="number" name="FeesHeadTotal"  />
                            </div>

                        </div>

                        <div class="col-md-4 pl-4 pr-5 border-right border-color-sea">
                            <h4>Discount %</h4>
                            <br />

                            <div class="form-group">
                                <input class="horizontal_style" min="0" max="100" value="@Model.DiscountAdmissionFee" required onkeyup="CalculateDiscountedAmount(this)" id="AdmissionFeeDisPer" type="number" name="AdmissionFeeDisPer"  />
                            </div>

                            <div class="form-group">
                                <input class="horizontal_style" min="0" max="100" value="@Model.DiscountTutionFee" required onkeyup="CalculateDiscountedAmount(this)" id="TutionFeeDisPer" type="number" name="TutionFeeDisPer"  />
                            </div>


                            <div class="form-group">
                                <input class="horizontal_style" min="0" max="100" value="@Model.DiscountLabCharges" required onkeyup="CalculateDiscountedAmount(this)" id="LabFeeDisPer" type="number" name="LabFeeDisPer" />
                            </div>

                            <div class="form-group">
                                <input class="horizontal_style" min="0" max="100" value="@Model.DiscountComputerFee" required onkeyup="CalculateDiscountedAmount(this)" id="ComputerFeeDisPer" type="number" name="ComputerFeeDisPer"  />
                            </div>

                            <div class="form-group">
                                <input class="horizontal_style" min="0" max="100" value="@Model.DiscountOtherServices" required onkeyup="CalculateDiscountedAmount(this)" id="OtherServicesDisPer" type="number" name="OtherServicesDisPer"  />
                            </div>

                            @*<div class="form-group">
                                    <input style="background:#C0C0C0" min="0" class="horizontal_style" required id="DisPerTotal" type="number" name="DisPerTotal" value="0" />
                                </div>*@


                        </div>


                        <div class="col-md-4 pl-4 pr-5 border-right border-color-sea">
                            <h4>Discounted Amount</h4>
                            <br />

                            <div class="form-group">
                                <input class="horizontal_style" min="0" value="@Model.DiscountAdmissionFeeAmount" required readonly id="AdmissionFeeDisAmount" type="number" name="AdmissionFeeDisAmount"  />
                            </div>

                            <div class="form-group">
                                <input class="horizontal_style" min="0" value="@Model.DiscountTutionFeeAmount" required readonly id="TutionFeeDisAmount" type="number" name="TutionFeeDisAmount" />
                            </div>

                            <div class="form-group">
                                <input class="horizontal_style" min="0" value="@Model.DiscountLabChargesAmount" required readonly id="LabFeeDisAmount" type="number" name="LabFeeDisAmount"  />
                            </div>


                            <div class="form-group">
                                <input class="horizontal_style" min="0" value="@Model.DiscountComputerFeeAmount" required readonly id="ComputerFeeDisAmount" type="number" name="ComputerFeeDisAmount" />
                            </div>


                            <div class="form-group">
                                <input class="horizontal_style" min="0" value="@Model.DiscountOtherServicesAmount" required readonly id="OtherServicesDisAmount" type="number" name="OtherServicesDisAmount"  />
                            </div>

                            <div class="form-group">
                                <input style="background:#C0C0C0" min="0" value="@Model.DiscountTotalAmount" class="horizontal_style" required readonly id="DisAmountTotal" type="number" name="DisAmountTotal" />
                            </div>

                        </div>
                    </div>
                    <br>

                    <hr />
                    <br>

                    <div class="row">

                        <div class="col-md-4 pl-4 pr-5 border-right border-color-sea">

                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">January </label>
                                <input value="@Model.Jan_Multiplier" min="0" class="horizontal_style Month" id="Junuary" type="number" name="Junuary" value="0" />
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">February </label>
                                <input min="0" value="@Model.Feb_Multiplier" class="horizontal_style Month" id="February" type="number" name="February" value="0" />
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">March </label>
                                <input min="0" value="@Model.Mar_Multiplier" class="horizontal_style Month" id="March" type="number" name="March" value="0" />
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">April </label>
                                <input min="0" value="@Model.April__Multiplier" class="horizontal_style Month" id="April" type="number" name="April" value="0" />
                            </div>

                        </div>

                        <div class="col-md-4 pl-4 pr-5 border-right border-color-sea">

                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">May </label>
                                <input min="0" value="@Model.May_Multiplier" class="horizontal_style Month" id="May" type="number" name="May" value="0" />
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">June </label>
                                <input min="0" value="@Model.June_Multiplier" class="horizontal_style Month" id="June" type="number" name="June" value="0" />
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">July </label>
                                <input min="0" value="@Model.July__Multiplier" class="horizontal_style Month" id="July" type="number" name="July" value="0" />
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">August </label>
                                <input min="0" value="@Model.Aug_Multiplier" class="horizontal_style Month" id="August" type="number" name="August" value="0" />
                            </div>

                        </div>


                        <div class="col-md-4 pl-4 pr-5 border-right border-color-sea">


                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">September </label>
                                <input min="0" value="@Model.Sep_Multiplier" class="horizontal_style Month" id="September" type="number" name="September" value="0" />
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">October </label>
                                <input min="0" value="@Model.Oct_Multiplier" class="horizontal_style Month" id="October" type="number" name="October" value="0" />
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">November </label>
                                <input min="0" value="@Model.Nov_Multiplier" class="horizontal_style Month" id="November" type="number" name="November" value="0" />
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-5 pull-left" style="padding-left: 0px;">December </label>
                                <input min="0" value="@Model.Dec__Multiplier" class="horizontal_style Month" id="December" type="number" name="December" value="0" />
                            </div>


                        </div>
                        <br />
                        <div class="col-md-4">

                            <span id="MonthsError" style="color:red;padding-left:10px;"> </span>
                        </div>
                    </div><!--end of row-->

                    <br>

                    <div class="pull-right">
                        <button class="btn btn-primary" id="submit" type="submit">Save</button>
                        <button onclick="window.location.href = '/AspnetStudents/StudentIndex'" id="cancel" type="button" class="btn btn-primary pull-right rounded rounded-lg bg-transparent text-muted shadow-none mr-3">
                            <i class="material-icons mr-2">cached</i>  Cancel &nbsp; &nbsp;
                        </button>
                        <div class="clearfix"></div>
                    </div>
                </form>

                @*}*@
            </div>
        </div>
    </div>
</div>
<script>


    $(document).ready(function () {

             $("#UploadImg").change(function () {



            $("#imgPreview").css('display', 'block');
            readURL(this);
        });

        

        $("#PageHeader").html("Edit Student");

        //$("#BreadCrumbs").append(' <li> <a href="#"> Home </a> <span>&gt;</span></li>');
        //$("#BreadCrumbs").append(' <li class="active"><a id="BreadCrumps1" href="#">Edit</a></li>');

        
        $("#BreadCrumbs").append(' <li> <a href="/FinanceSummary/Index"> Home </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li> <a href="/AspnetStudents/StudentIndex"> Students Index </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li class="active"><a id="BreadCrumps1" href="#">Create</a></li>');

        $('#BranchId').change(function () {

            var BranchId = $(this).val();

            if (BranchId != "") {

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/StudentRecurringFees/ClassesByBranch?BranchId=" + BranchId,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $("#ClassId");
                        $el.empty();


                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Class'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select Class'));
                        }
                    }
                });
            }
            else {
                var $el = $("#ClassId");
                $el.empty();

            }

        });

        $("#BranchId").change(function () {

            ResestFields();
            GetFeeHeads();
        })
        $("#ClassId").change(function () {

            ResestFields();
            GetFeeHeads();
        })

        $(".code").on("keyup", function () {
            TotalFee();

            CalculateDisountedAmount1(this);

        })
        $(".Month").on("keyup", function () {
            $("#MonthsError").html("");
            $("#submit").prop("disabled", false);

            MonthsTotal();
        })


      $('#StudentForm').validate({ // initialize the plugin
            rules: {
                FName: {
                    required: true,
                    //email: true
                },
                
            },
            submitHandler: function (form) {
                debugger;

                var Junuary = $("#Junuary").val();
                var February = $("#February").val();
                var March = $("#March").val();
                var April = $("#April").val();
                var May = $("#May").val();
                var June = $("#June").val();
                var July = $("#July").val();
                var August = $("#August").val();
                var September = $("#September").val();
                var October = $("#October").val();
                var November = $("#November").val();
                var December = $("#December").val();

                if (Junuary == "") {

                    Junuary = 0;
                }
                if (February == "") {
                    February = 0;
                }
                if (March == "") {
                    March = 0;
                }
                if (April == "") {
                    April = 0;
                }
                if (May == "") {
                    May = 0;
                }
                if (June == "") {
                    June = 0;
                }
                if (July == "") {
                    July = 0;
                }
                if (August == "") {
                    August = 0;
                } if (September == "") {
                    September = 0;
                }
                if (October == "") {
                    October = 0;
                }
                if (November == "") {
                    November = 0;
                } if (December == "") {
                    December = 0;
                }


                var Total = parseFloat(Junuary) + parseFloat(February) + parseFloat(March) + parseFloat(April) + parseFloat(May) + parseFloat(June) + parseFloat(July) + parseFloat(August) + parseFloat(September) + parseFloat(October) + parseFloat(November) + parseFloat(December);
                var Check = true;


                if (Total > 12 || Total < 12 || Total == 0 || Total < 0) {

                    $("#MonthsError").html("Months total must be 12");
                    $("#submit").prop("disabled", true);
                    Check = false;

                    return false;

                }
                else {
                    Check = true;
                }

                if (/*$("#DisAmountTotal").val() == 0 ||*/ $("#DisAmountTotal").val() < 0) {

                    return false;
                }

                if (Check == true) {

                       $("#submit").prop("disabled", true);

                     var studentRegistrationViewModel = {

                        FName: $("#FName").val(),
                        BranchId: $("#BranchId").val(),
                        NationalityId: $("#NationalityId").val(),
                        ReligionId: $("#ReligionId").val(),
                        GenderId: $("#GenderId").val(),
                        Birthdate: $("#Birthdate").val(),
                        CellNo: $("#CellNo").val(),
                        RollNo: $("#RollNo").val(),
                        StudentID: $("#StudentId").val(),
                       // Password: null,
                        Email: $("#Email").val(),
                        BranchId: $("#BranchId").val(),
                        ClassId: $("#ClassId").val(),

                        AdmissionFee: $("#AdmissionFee").val(),
                        TutionFee: $("#TutionFee").val(),
                        LabCharges: $("#LabFee").val(),
                        ComputerFee: $("#ComputerFee").val(),
                        OtherServices: $("#OtherServices").val(),
                        TotalFee: $("#FeesHeadTotal").val(),

                        DiscountAdmissionFee: $("#AdmissionFeeDisPer").val(),
                        DiscountTutionFee: $("#TutionFeeDisPer").val(),
                        DiscountLabCharges: $("#LabFeeDisPer").val(),
                        DiscountComputerFee: $("#ComputerFeeDisPer").val(),
                        DiscountOtherServices: $("#OtherServicesDisPer").val(),
                    
                        DiscountAdmissionFeeAmount: $("#AdmissionFeeDisAmount").val(),
                        DiscountTutionFeeAmount: $("#TutionFeeDisAmount").val(),
                        DiscountLabChargesAmount: $("#LabFeeDisAmount").val(),
                        DiscountComputerFeeAmount: $("#ComputerFeeDisAmount").val(),
                        DiscountOtherServicesAmount: $("#OtherServicesDisAmount").val(),
                        DiscountTotalAmount: $("#DisAmountTotal").val(),
                        
                        Jan_Multiplier: $("#Junuary").val(),
                        Feb_Multiplier: $("#February").val(),
                        Mar_Multiplier: $("#March").val(),
                        April__Multiplier: $("#April").val(),
                        May_Multiplier: $("#May").val(),
                        June_Multiplier: $("#June").val(),
                        July__Multiplier: $("#July").val(),
                        Aug_Multiplier: $("#August").val(),
                        Sep_Multiplier: $("#September").val(),
                        Oct_Multiplier: $("#October").val(),
                        Nov_Multiplier: $("#November").val(),
                        Dec__Multiplier: $("#December").val(),


                    };

                 
                    $.ajax({
                        type: "post",
                        url: "/AspNetStudents/Edit",
                        data: { 'studentRegistrationViewModel': studentRegistrationViewModel },
                        datatype: "json",
                        cache: false,
                        success: function (data) {
                            debugger

                            if (data.IsStudentUpdated == "Yes") {

                                uploadStudentImage(data.UserId);
                                   window.location.href = "/AspnetStudents/StudentIndex";

                            }
                            else {

                                
                            }

                        }

                    })
                }
            }
        });


        function uploadStudentImage(id) {

            debugger
            var UserId = id;
            var fileUpload = $("#UploadImg").get(0).files;
            var data = new FormData();

            data.append('UserId', UserId);
            data.append("file", fileUpload[0]);


            if (fileUpload.length > 0 && UserId != "") {

                $.ajax({
                    type: "POST",
                    url: "/AspnetStudents/UploadImageOfStudent",
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (result) {
                        window.location.href = "/AspnetStudents/StudentIndex";

                    }

                })

            }
            else {
                window.location.href = "/AspnetStudents/StudentIndex";

            }

        }

    })//end of document ready

    function MonthsTotal() {

        var Junuary = $("#Junuary").val();
        var February = $("#February").val();
        var March = $("#March").val();
        var April = $("#April").val();
        var May = $("#May").val();
        var June = $("#June").val();
        var July = $("#July").val();
        var August = $("#August").val();
        var September = $("#September").val();
        var October = $("#October").val();
        var November = $("#November").val();
        var December = $("#December").val();

        if (Junuary == "") {
            Junuary = 0;
        }
        if (February == "") {
            February = 0;
        }
        if (March == "") {
            March = 0;
        }
        if (April == "") {
            April = 0;
        }
        if (May == "") {
            May = 0;
        }
        if (June == "") {
            June = 0;
        }
        if (July == "") {
            July = 0;
        }
        if (August == "") {
            August = 0;
        } if (September == "") {
            September = 0;
        }
        if (October == "") {
            October = 0;
        }
        if (November == "") {
            November = 0;
        } if (December == "") {
            December = 0;
        }


        var Total = parseFloat(Junuary) + parseFloat(February) + parseFloat(March) + parseFloat(April) + parseFloat(May) + parseFloat(June) + parseFloat(July) + parseFloat(August) + parseFloat(September) + parseFloat(October) + parseFloat(November) + parseFloat(December);

        if (Total > 12) {

            $("#MonthsError").html("Months total must be 12");
            $("#submit").prop("disabled", true);

        }



    }
    function CalculateDiscountedAmount(e) {

        debugger

        var id = e.id;

        var FeeHeadFieldVal = $("#" + id).val();
        if (FeeHeadFieldVal != "") {

            if (id == "AdmissionFeeDisPer") {

                var AdmissionFee = $("#AdmissionFee").val();

                var DiscountedAmount = parseFloat(AdmissionFee) * (FeeHeadFieldVal / 100);

                var AmountToDisplay = AdmissionFee - DiscountedAmount;

                $("#AdmissionFeeDisAmount").val(AmountToDisplay);

            }
            else if (id == "TutionFeeDisPer") {

                var TutionFee = $("#TutionFee").val();
                var DiscountedAmount = parseFloat(TutionFee) * (FeeHeadFieldVal / 100);

                var AmountToDisplay = TutionFee - DiscountedAmount;

                $("#TutionFeeDisAmount").val(AmountToDisplay);

            }
            else if (id == "LabFeeDisPer") {

                var LabFee = $("#LabFee").val();
                var DiscountedAmount = parseFloat(LabFee) * (FeeHeadFieldVal / 100);
                var AmountToDisplay = LabFee - DiscountedAmount;
                $("#LabFeeDisAmount").val(AmountToDisplay);
            }

            else if (id == "ComputerFeeDisPer") {

                var ComputerFee = $("#ComputerFee").val();
                var DiscountedAmount = parseFloat(ComputerFee) * (FeeHeadFieldVal / 100);
                var AmountToDisplay = ComputerFee - DiscountedAmount;
                $("#ComputerFeeDisAmount").val(AmountToDisplay);
            }
            else if (id == "OtherServicesDisPer") {

                var OtherServices = $("#OtherServices").val();
                var DiscountedAmount = parseFloat(OtherServices) * (FeeHeadFieldVal / 100);
                var AmountToDisplay = OtherServices - DiscountedAmount;
                $("#OtherServicesDisAmount").val(AmountToDisplay);
            }
            else {

            }

            calculateDiscountPercentageAverage();
            calculateDiscountAmountTotal();

        }
    }

    function CalculateDisountedAmount1(e) {
        debugger
        var id = e.id;
        //  alert(id);

        var FeeHeadFieldVal = $("#" + id).val();
        if (FeeHeadFieldVal != "") {

            if (id == "AdmissionFee") {

                var DiscountPercentageFieldValue = $("#AdmissionFeeDisPer").val();

                var DiscountedAmount = parseFloat(FeeHeadFieldVal) * (DiscountPercentageFieldValue / 100);

                var AmountToDisplay = FeeHeadFieldVal - DiscountedAmount;

                $("#AdmissionFeeDisAmount").val(AmountToDisplay);

            }
            else if (id == "TutionFee") {

                var DiscountPercentageFieldValue = $("#TutionFeeDisPer").val();

                var DiscountedAmount = parseFloat(FeeHeadFieldVal) * (DiscountPercentageFieldValue / 100);

                var AmountToDisplay = FeeHeadFieldVal - DiscountedAmount;

                $("#TutionFeeDisAmount").val(AmountToDisplay);

            }
            else if (id == "LabFee") {

                var DiscountPercentageFieldValue = $("#LabFeeDisPer").val();
                var DiscountedAmount = parseFloat(FeeHeadFieldVal) * (DiscountPercentageFieldValue / 100);
                var AmountToDisplay = FeeHeadFieldVal - DiscountedAmount;
                $("#LabFeeDisAmount").val(AmountToDisplay);
            }

            else if (id == "ComputerFee") {

                var DiscountPercentageFieldValue = $("#ComputerFeeDisPer").val();
                var DiscountedAmount = parseFloat(FeeHeadFieldVal) * (DiscountPercentageFieldValue / 100);
                var AmountToDisplay = FeeHeadFieldVal - DiscountedAmount;
                $("#ComputerFeeDisAmount").val(AmountToDisplay);
            }
            else if (id == "OtherServices") {

                var DiscountPercentageFieldValue = $("#OtherServicesDisPer").val();
                var DiscountedAmount = parseFloat(FeeHeadFieldVal) * (DiscountPercentageFieldValue / 100);
                var AmountToDisplay = FeeHeadFieldVal - DiscountedAmount;
                $("#OtherServicesDisAmount").val(AmountToDisplay);
            }
            else {

            }
            calculateDiscountPercentageAverage();
            calculateDiscountAmountTotal();

        }
    }

    function calculateDiscountPercentageAverage() {

        var AdmissionFeeDisPer = $("#AdmissionFeeDisPer").val();
        var TutionFeeDisPer = $("#TutionFeeDisPer").val();
        var LabFeeDisPer = $("#LabFeeDisPer").val();
        var ComputerFeeDisPer = $("#ComputerFeeDisPer").val();
        var OtherServicesDisPer = $("#OtherServicesDisPer").val();


        if (AdmissionFeeDisPer == "") {

            AdmissionFeeDisPer = 0;
        }

        if (TutionFeeDisPer == "") {

            TutionFeeDisPer = 0;
        }
        if (LabFeeDisPer == "") {

            LabFeeDisPer = 0;
        }
        if (ComputerFeeDisPer == "") {

            ComputerFeeDisPer = 0;
        }
        if (OtherServicesDisPer == "") {

            OtherServicesDisPer = 0;
        }

        var TotalDiscountPercentage = parseFloat(AdmissionFeeDisPer) + parseFloat(TutionFeeDisPer) + parseFloat(LabFeeDisPer) + parseFloat(ComputerFeeDisPer) + parseFloat(OtherServicesDisPer);
        var AverageDiscountPercentage = TotalDiscountPercentage / 5;
        $("#DisPerTotal").val(AverageDiscountPercentage);

    }

    function TotalFee() {
        debugger

        var TutionFee = $("#TutionFee").val();
        if (TutionFee == "") {

            TutionFee = 0;
        }

        var LabCharges = $("#LabFee").val();

        if (LabCharges == "") {

            LabCharges = 0;
        }
        var ComputerFee = $("#ComputerFee").val();

        if (ComputerFee == "") {

            ComputerFee = 0;
        }
        var OtherServices = $("#OtherServices").val();
        if (OtherServices == "") {

            OtherServices = 0;
        }

        var AdmissionFee = $("#AdmissionFee").val();
        if (AdmissionFee == "") {

            AdmissionFee = 0;
        }

        Total = parseFloat(TutionFee) + parseFloat(LabCharges) + parseFloat(ComputerFee) + parseFloat(AdmissionFee) + parseFloat(OtherServices);

        $("#FeesHeadTotal").val(Total);


    }

    function calculateDiscountAmountTotal() {

        var AdmissionFeeDisAmount = $("#AdmissionFeeDisAmount").val();
        var TutionFeeDisAmount = $("#TutionFeeDisAmount").val();
        var LabFeeDisAmount = $("#LabFeeDisAmount").val();
        var ComputerFeeDisAmount = $("#ComputerFeeDisAmount").val();
        var OtherServicesDisAmount = $("#OtherServicesDisAmount").val();

        if (AdmissionFeeDisAmount == "") {

            AdmissionFeeDisAmount = 0;
        }

        if (TutionFeeDisAmount == "") {

            TutionFeeDisAmount = 0;
        }

        if (LabFeeDisAmount == "") {

            LabFeeDisAmount = 0;
        }
        if (ComputerFeeDisAmount == "") {

            ComputerFeeDisAmount = 0;
        }
        if (OtherServicesDisAmount == "") {

            OtherServicesDisAmount = 0;
        }
        var TotalDiscountAmount = parseFloat(AdmissionFeeDisAmount) + parseFloat(TutionFeeDisAmount) + parseFloat(LabFeeDisAmount) + parseFloat(ComputerFeeDisAmount) + parseFloat(OtherServicesDisAmount);

        $("#DisAmountTotal").val(TotalDiscountAmount);
    }

    function Return() {
        window.location.href = "StudentIndex"
    }


    function checkPhone(phone) {
        var length = phone.value.length;

        if (length == 11) {
            var patt = new RegExp("^[0]+[0-9]{10,}$");
            var test = patt.test(phone.value);
            console.log(test);
            if (test == false) {
                $('#Phone-Error').html("Phone number is not in correct formate");


                $('#submit').prop('disabled', true);
            } else {
                $('#submit').prop('disabled', false);
                $('#Phone-Error').html(" ");
            }
        } else {
            $('#Phone-Error').html("Phone number is not in correct formate");
            $('#submit').prop('disabled', true);
        }
    }

    function readURL(input) {
        $("#UploadPhotoDiv").hide();
        $("#imgPreview").height("150");
        $("#imgPreview").width("150");

        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#imgPreview').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    function GetFeeHeads() {

        debugger
        var BranchId = $("#BranchId").val();
        var ClassId = $("#ClassId").val();

        if (BranchId != "" && ClassId != "") {

            $.ajax({
                type: "POST",
                url: "/AspnetStudents/GetFeeHeads",
                data: { "BranchId": BranchId, "ClassId": ClassId },
                success: function (data) {

                    $("#AdmissionFee").val(data.AdmissionFee);
                    $("#TutionFee").val(data.TutionFee);
                    $("#LabFee").val(data.LabCharges);
                    $("#ComputerFee").val(data.ComputerFee);
                    $("#OtherServices").val(data.OtherServices);
                    $("#FeesHeadTotal").val(data.Total);

                    $("#AdmissionFeeDisAmount").val(data.AdmissionFee);
                    $("#TutionFeeDisAmount").val(data.TutionFee);
                    $("#LabFeeDisAmount").val(data.LabCharges);
                    $("#ComputerFeeDisAmount").val(data.ComputerFee);
                    $("#OtherServicesDisAmount").val(data.OtherServices);
                    $("#DisAmountTotal").val(data.Total);

                }
            })

        }

    }
    function ResestFields() {

        $("#AdmissionFee").val(0);
        $("#TutionFee").val(0);
        $("#LabFee").val(0);
        $("#ComputerFee").val(0);
        $("#OtherServices").val(0);
        $("#AdmissionFeeDisPer").val(0);
        $("#TutionFeeDisPer").val(0);
        $("#LabFeeDisPer").val(0);
        $("#ComputerFeeDisPer").val(0);
        $("#OtherServicesDisPer").val(0);
        $("#AdmissionFeeDisAmount").val(0);
        $("#TutionFeeDisAmount").val(0);
        $("#LabFeeDisAmount").val(0);
        $("#ComputerFeeDisAmount").val(0);
        $("#OtherServicesDisAmount").val(0);
        $("#FeesHeadTotal").val(0);
        $("#DisPerTotal").val(0);
        $("#DisAmountTotal").val(0);

    }

    function checkPhone(phone) {
        var length = phone.value.length;

        if (length == 11) {
            var patt = new RegExp("^[0]+[0-9]{10,}$");
            var test = patt.test(phone.value);
            console.log(test);
            if (test == false) {
                $('#Phone-Error').html("Phone number is not in correct formate");


                $('#submit').prop('disabled', true);
            } else {
                $('#submit').prop('disabled', false);
                $('#Phone-Error').html(" ");
            }
        } else {
            $('#Phone-Error').html("Phone number is not in correct formate");
            $('#submit').prop('disabled', true);
        }
    }

        function readURL(input) {

            $("#imgPreview").height("150");
            $("#imgPreview").width("150");

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {


                    $('#imgPreview').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }



</script>