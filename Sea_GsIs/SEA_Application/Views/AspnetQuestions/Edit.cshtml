@model SEA_Application.Models.QuestionAnswerViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_TeacherDashboardLayout.cshtml";
}
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
@*<script src="~/Content/Toggle.js"></script>*@
<script src="~/Content/Toggle.js"></script>

<style>

    input[type='checkbox'] {
        width: 20px;
        height: 20px;
    }

    .checkbox input[type=checkbox], .checkbox-inline input[type=checkbox], .radio input[type=radio], .radio-inline input[type=radio] {
        position: absolute;
        margin-top: 4px\9;
        margin-left: 0px;
    }

    .page-sidebar .page-sidebar-menu, .page-sidebar-closed.page-sidebar-fixed .page-sidebar:hover .page-sidebar-menu {
        list-style: none;
        margin: 0;
        padding: 0;
        height: 1000px !important;
    }
</style>


<script>
    $(document).ready(function () {


        $("#PageHeader").html("Edit Question");

        $("#BreadCrumbs").append(' <li> <a  href="/Teacher/Index"> Home </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li> <a href="/AspnetQuestions/ViewQuestionAndQuiz">Question & Quiz </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li class="active"><a id="BreadCrumps1" href="#">Edit </a></li>');


        $("#UploadImg").change(function () {
            readURL(this);
        });
        function readURL(input) {
            $("#UploadPhotoDiv").hide();
            $("#imgPreview").height("150");
            $("#imgPreview").width("150");

            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imgPreview').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }


        $('#TopicId').change(function () {


            var topid = $(this).val();
            console.log(topid);
            if (topid != "") {


                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/GetLession?TopID=" + topid,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);

                        var $el = $("#LessonId");
                        $el.empty();
                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Lesson'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select'));
                        }
                    }
                });
            }
            else {
                var $el = $("#LessonId");
                $el.empty();
            }

        });


        $('#SubId').change(function () {

            var subid = $(this).val();
            console.log(subid);
            if (subid != "") {


                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/GetTopic?SubID=" + subid,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $("#TopicId");
                        $el.empty();
                        var $e1 = $("#LessonId");
                        $e1.empty();


                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Topic'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select'));
                        }
                    }
                });
            }
            else {


                var $el = $("#TopicId");
                $el.empty();
                var $e1 = $("#LessonId");
                $e1.empty();

            }
        });

    })
</script>

<style>
    .upload-photo {
        background-color: #f2f5fa !important;
        min-height: 236.667px;
        max-height: 100%;
        width: 273px;
    }

    .onoffswitch {
        position: relative;
        width: 90px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }

    .onoffswitch-checkbox {
        display: none;
    }

    .onoffswitch-label {
        display: block;
        overflow: hidden;
        cursor: pointer;
        border: 2px solid #999999;
        border-radius: 20px;
    }

    .onoffswitch-inner {
        display: block;
        width: 200%;
        margin-left: -100%;
        transition: margin 0.3s ease-in 0s;
    }

        .onoffswitch-inner:before, .onoffswitch-inner:after {
            display: block;
            float: left;
            width: 50%;
            height: 30px;
            padding: 0;
            line-height: 30px;
            font-size: 14px;
            color: white;
            font-family: Trebuchet, Arial, sans-serif;
            font-weight: bold;
            box-sizing: border-box;
        }

        .onoffswitch-inner:before {
            content: "True";
            padding-left: 10px;
            background-color: #00b8ec;
            color: #FFFFFF;
        }

        .onoffswitch-inner:after {
            content: "False";
            padding-right: 10px;
            background-color: #EEEEEE;
            color: #999999;
            text-align: right;
        }

    .onoffswitch-switch {
        display: block;
        width: 18px;
        margin: 6px;
        background: #FFFFFF;
        position: absolute;
        top: 0;
        bottom: 0;
        right: 56px;
        border: 2px solid #999999;
        border-radius: 20px;
        transition: all 0.3s ease-in 0s;
    }

    .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-inner {
        margin-left: 0;
    }

    .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {
        right: 0px;
    }
</style>



<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body p-5">

                @using (Html.BeginForm("Edit", "AspnetQuestions", FormMethod.Post, new { enctype = "multipart/form-data", @class = "forms form-horizontal" }))
                {
                    @Html.AntiForgeryToken()


                    <div class="row">
                        <div class="col-md-6 pl-5 pr-5 ">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)

                            <div class="form-group bmd-form-group is-filled">
                                @Html.LabelFor(model => model.QuestionName, htmlAttributes: new { @class = "bmd-label-floating" })

                                @Html.EditorFor(model => model.QuestionName, new { htmlAttributes = new { id = "textareastyle", @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.QuestionName, "", new { @class = "text-danger" })

                            </div>




                            <div class="form-group">
                                <label class="form-check-label" for="QuestionIsActive">Is Active</label>
                                <div class="onoffswitch">
                                    <input type="checkbox" name="QuestionIsActive" class="onoffswitch-checkbox" id="QuestionIsActive" checked>
                                    <label class="onoffswitch-label" for="QuestionIsActive">
                                        <span class="onoffswitch-inner"></span>
                                        <span class="onoffswitch-switch"></span>
                                    </label>
                                </div>
                            </div>
                            @if (@ViewBag.Photo != null)
                            {

                                <div style="height: 120px;" class="upload-photo border rounded d-flex align-items-center justify-content-center flex-column mb-2">
                                    <a href="#">
                                        <img id="imgPreview" style="width: 150px; height: 150px" src="~/Content/QuestionPhotos/@ViewBag.Photo" onclick="$('#UploadImg').click();" />
                                    </a>
                                    <input style="display:none;" id="UploadImg" type="file" name="image" />
                                    <div id="UploadPhotoDiv" class="mt-3">Upload Photo</div>
                                </div>
                            }
                            else
                            {
                                <div style="height: 120px;" class="upload-photo border rounded d-flex align-items-center justify-content-center flex-column mb-2">
                                    <a href="#">
                                        <img id="imgPreview" style="width: 150px; height: 150px" src="/Content/Images/Upload.png" onclick="$('#UploadImg').click();" />
                                    </a>
                                    <input style="display:none;" id="UploadImg" type="file" name="image" />
                                    <div id="UploadPhotoDiv" class="mt-3">Upload Photo</div>
                                </div>


                            }

                        </div> <!--end column 6-->
                        <div class="col-md-6 pl-5 pr-5 ">
                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select Branch*</label>
                                    @Html.DropDownList("BranchId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled", @required = true })
                                    @*<select class="form-control SubIdDDL" id="SubId" name="SubId" required></select>*@
                                </div>
                            </div>


                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select class*</label>
                                    @Html.DropDownList("ClassId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled", @required = true })
                                    @*<select class="form-control SubIdDDL" id="SubId" name="SubId" required></select>*@
                                </div>
                            </div>

                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select Section*</label>
                                    @Html.DropDownList("SectionId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled", @required = true })
                                    @*<select class="form-control SubIdDDL" id="SubId" name="SubId" required></select>*@
                                </div>
                            </div>
                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select Subject*</label>
                                    @Html.DropDownList("SubId", null, htmlAttributes: new { @class = "form-control SubIdDDL", @disabled = "disabled", @required = true })
                                    @*<select class="form-control SubIdDDL" id="SubId" name="SubId" required></select>*@
                                </div>
                            </div>

                            <div class="form-row mt-3">
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label for="" class="bmd-label-static pl-2">Select Topic*</label>

                                    @Html.DropDownList("TopicId", null, htmlAttributes: new { @class = "form-control TopicIdDDL", @disabled = "disabled", @required = true })
                                </div>
                            </div>

                        </div>  <!--end column -->
                    </div><!--end row-->


                    <br>
                    <br>




                    @*<div class="form-group">
                            @Html.LabelFor(model => model.QuestionIsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <div class="checkbox">
                                        @Html.EditorFor(model => model.QuestionIsActive)
                                        @Html.ValidationMessageFor(model => model.QuestionIsActive, "", new { @class = "text-danger" })
                                    </div>
                                <input type="checkbox" id="IsMandatory" name="IsMandatory" checked data-toggle="toggle">
                            </div>
                        </div>*@

                    <div class="row">
                        <div class="col-md-6 pl-5 pr-5 ">



                            <div class="form-group">
                                @*@Html.LabelFor(model => model.QuestionType, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <label for="" class="control-label">Question Type* </label>


                                <select class="form-control" id="QuestionType" name="QuestionType" required>

                                    <option value="MCQ" selected>MCQ</option>

                                </select>


                            </div>


                            @*<div id="OptionsBlock" style="display:none;">*@

                            <div class="form-group bmd-form-group my-3">
                                @Html.LabelFor(model => model.OptionNameOne, htmlAttributes: new { @class = "bmd-label-floating" })

                                @Html.EditorFor(model => model.OptionNameOne, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.OptionNameOne, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group bmd-form-group my-3">
                                @Html.LabelFor(model => model.QuestionNameTwo, htmlAttributes: new { @class = "bmd-label-floating" })

                                @Html.EditorFor(model => model.QuestionNameTwo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.QuestionNameTwo, "", new { @class = "text-danger" })

                            </div>
                        </div> <!--end of Column 6-->

                        <div class="col-md-6 pl-5 pr-5 ">

                            <br />
                            <div class="form-group bmd-form-group my-3">
                                @Html.LabelFor(model => model.QuestionNameThree, htmlAttributes: new { @class = "bmd-label-floating" })

                                @Html.EditorFor(model => model.QuestionNameThree, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.QuestionNameThree, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group bmd-form-group my-3">
                                @Html.LabelFor(model => model.QuesitonNameFour, htmlAttributes: new { @class = "bmd-label-floating" })

                                @Html.EditorFor(model => model.QuesitonNameFour, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.QuesitonNameFour, "", new { @class = "text-danger" })

                            </div>


                            <div class="form-group">

                                <label class="control-label">Select Correct Answer </label>



                                @Html.DropDownList("Answer", new List<SelectListItem>
                                     {

                                      new SelectListItem{ Text="Select One", Value = "" },
                                      new SelectListItem{ Text="(a)", Value = "a" },
                                      new SelectListItem{ Text="(b)", Value = "b" },
                                      new SelectListItem{ Text="(c)", Value = "c" },
                                      new SelectListItem{ Text="(d)", Value = "d" },

                                      }, htmlAttributes: new { @class = "form-control", @required = true })



                            </div>

                        </div>
                        @*</div>*@


                        @*<div class="form-group" id="FillAnswerBlock" style="display:none">
                                <label class="control-label col-md-2">Enter Answer </label>
                                <div class="col-md-6">

                                    <input class="form-control" type="text" id="FillAnswer" name="FillAnswer" />


                                </div>
                            </div>*@


                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.AnswerId, "AnswerId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("AnswerId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AnswerId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@



                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Is_Quiz, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Is_Quiz)
                                    @Html.ValidationMessageFor(model => model.Is_Quiz, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Is_Active, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Is_Active)
                                    @Html.ValidationMessageFor(model => model.Is_Active, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                            </div>
                        </div>*@


                    @*<div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>*@
                    <br>
                    <hr class="mt-5 mb-4">
                    <button type="submit" class="btn btn-primary pull-right rounded rounded-lg"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Save &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </button>
                    <button id="btnCancel" type="button" class="btn btn-primary pull-right rounded rounded-lg bg-transparent text-muted shadow-none mr-3">
                        <i class="material-icons mr-2">cached</i>  Cancel &nbsp; &nbsp;
                    </button>
                    <div class="clearfix"></div>




                }

            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {

        $("#btnCancel").click(function () {
            window.location.href = "/AspnetQuestions/ViewQuestionAndQuiz";
        })


        //    $("#QuestionType").change(function () {


        var QuestionType = "MCQ";

        if (QuestionType == "MCQ" || QuestionType == "TF") {

            $("#OptionsBlock").css('display', 'block');
            $("#FillAnswerBlock").css('display', 'none');

            $("#OptionsBlock input,select").prop('required', true);
            $("#FillAnswer").prop('required', false);
            $("#FillAnswer").val("");

        }
        else {

            $("#OptionsBlock input").val("");


            $("#OptionsBlock").css('display', 'none');
            $("#FillAnswerBlock").css('display', 'block');

            $("#OptionsBlock input,select").prop('required', false);
            $("#FillAnswer").prop('required', true);


        }



        //  })



    })

</script>
