@model SEA_Application.Models.LessonPlan

@{

      if (User.IsInRole("Branch_Admin"))
    {
        Layout = "~/Views/Shared/_BranchAdminDashboardLayout.cshtml";
        
    }
    else
    {
           Layout = "~/Views/Shared/_TeacherDashboardLayout.cshtml";
    }
}


<style>
    .card .card-body .form-group {
        margin: 15px 0 0;
    }
    .Floating_text {
        border: 2px solid #EEEEEE !important;
    }

    .tab {
        display: none;
    }
    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 15px;
        /*background-color: #bbbbbb;*/
        /*border: none;*/
        border-radius: 50%;
        display: inline-block;
        /*opacity: 0.5;*/
    }

    .mt-4, .my-4 {
        margin-top: 1.17rem !important;
    }

    .step.active {
        opacity: 1;
    }

    /* Mark the steps that are finished and valid: */
    .step.finish {
        background-color: #4CAF50;
    }

    #prevBtn {
        color: #afbccc !important;
    }

    #createLessonForm .step {
        font-size: 12px;
        font-weight: 600;
        font-stretch: normal;
        font-style: normal;
        line-height: 21px;
        text-align: center;
        color: #afbccc;
    }

    #createLessonForm .step {
        width: 24px;
        height: 24px;
        background-color: #ffffff;
        border: solid 1px rgba(0, 0, 0, 0.1);
        opacity: 1;
    }

        #createLessonForm .step.active {
            width: 26px;
            height: 26px;
            border: solid 2px #ffffff;
            background-color: #3cd876;
            color: #ffffff;
            box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);
        }

        #createLessonForm .step.finish {
            width: 26px;
            height: 26px;
            border: solid 2px #ffffff;
            color: #ffffff;
            background-color: #3cd876;
            box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);
        }

            #createLessonForm .step.finish.active {
                /*background-image: none;*/
            }

    .stepsCon {
        position: relative;
        display: inline-block;
        z-index: 6;
    }

        .stepsCon::before {
            content: '';
            background-color: rgba(0, 0, 0, 0.1);
            height: 1px;
            width: calc(100% - 50px);
            position: absolute;
            left: 25px;
            top: calc(50%);
            z-index: -4;
        }

    .step.finish {
        background-image: url(/Content/assets/assets/icons/finish.png);
        background-repeat: no-repeat;
        background-position: center;
    }

    .tab .leftCol .form-group {
        margin-top: 30px !important;
    }

    .tab .leftCol .input-group .form-group {
        margin-top: 5px !important;
    }

    /*--------WIZARD-----*/

    @@media screen and (max-width: 767px) {
        .tab > .row > .col-md-6.pl-5.pr-5 {
            padding-left: 0 !important;
        }
    }
</style>

<script>
    $(document).ready(function () {


        $("#PageHeader").html("Edit Lesson Plan");

        $("#BreadCrumbs").append(' <li> <a href="/Teacher/Index"> Home </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li> <a href="/AspnetSubjectTopics/ViewTopicsAndLessons"> Topics & Lessons </a> <span>&gt;</span></li>');
        $("#BreadCrumbs").append(' <li class="active"><a id="BreadCrumps1" href="#">Create</a></li>');
        $("#TotalMarks").val("0");

        var course = 'CSS';
        var Class;

        //  var BranchIdForLesson = $("#BranchIdForLesson").val();
        var ClassIdForLesson = $("#ClassId").val();
        var SectionIdForLesson = $("#SectionId").val();
        var SubjectIdForLesson = $("#SubjectId").val();
        var Week = $("#WeekVal").val();
        var TopicIdForLesson = $("#TopicId").val();

        $('#Week option[value="' + Week + '"]').prop('selected', true);

        var UserRole = $("#UserRole").val();
        if (UserRole == "Admin") {

            var ClassName = $("#ClassName").val();
            var SubjectName = $("#SubjectName").val();
            var SectionName = $("#SectionName").val();
            var TopicName = $("#TopicName").val();

            $('#ClassID').append('<option> ' + ClassName + '</option>');
            $('#SubjectID').append('<option> ' + SubjectName + '</option>');
            $('#SectionID').append('<option> ' + SectionName + '</option>');
            $('#TopicID').append('<option> ' + TopicName + '</option>');

        }
        else {


            $.ajax({
                type: "POST",
                cache: false,
                url: "/AspNetProject/AllClasses_LP",
                processData: false,
                contentType: false,
                success: function (data) {
                    var sch = JSON.parse(data);
                    console.log(sch);
                    var $el = $("#ClassID");
                    $el.empty();
                    if (sch.length > 0) {
                        $el.append($("<option></option>")
                            .attr("value", "").text('Select Class'));
                        for (i = 0; i < sch.length; i++) {

                            $el.append($("<option></option>")
                                .attr("value", sch[i].Id).text(sch[i].Name));
                        }
                    }
                    else {
                        $el.append($("<option></option>")
                            .attr("value", '').text('Select Class'));
                    }
                    $('#ClassID option[value="' + ClassIdForLesson + '"]').prop('selected', true);
                }
            });


            $.ajax({
                type: "POST",
                cache: false,
                url: "/AspNetProject/SectionByClasses?ClassId=" + ClassIdForLesson,
                processData: false,
                contentType: false,
                success: function (data) {

                    var sch = JSON.parse(data);
                    console.log(sch);

                    var $e4 = $("#SectionID");
                    $e4.empty();

                    if (sch.length > 0) {
                        $e4.append($("<option></option>")
                            .attr("value", "").text('Select Section'));
                        for (i = 0; i < sch.length; i++) {

                            $e4.append($("<option></option>")
                                .attr("value", sch[i].Id).text(sch[i].Name));
                        }
                    }
                    else {
                        $e4.append($("<option></option>")
                            .attr("value", '').text('Select Section'));
                    }

                    $('#SectionID option[value="' + SectionIdForLesson + '"]').prop('selected', true);

                }
            });

            $.ajax({
                type: "POST",
                cache: false,
                url: "/AspNetProject/SubjectsByClass?SectionId=" + SectionIdForLesson,
                processData: false,
                contentType: false,
                success: function (data) {
                    var sch = JSON.parse(data);
                    console.log(sch);
                    var $el = $(".SubId");
                    $el.empty();



                    if (sch.length > 0) {
                        $el.append($("<option></option>")
                            .attr("value", "").text('Select Subject'));
                        for (i = 0; i < sch.length; i++) {

                            $el.append($("<option></option>")
                                .attr("value", sch[i].Id).text(sch[i].Name));
                        }
                    }
                    else {
                        $el.append($("<option></option>")
                            .attr("value", '').text('Select Subject'));
                    }
                    $('#SubjectID option[value="' + SubjectIdForLesson + '"]').prop('selected', true);


                }
            });

            $.ajax({
                type: "POST",
                cache: false,
                url: "/AspNetProject/GetSubjectsForLessonPlan?ClassId=" + ClassIdForLesson + "&&SubjectId=" + SubjectIdForLesson + "&&SectionId=" + SectionIdForLesson,
                processData: false,
                contentType: false,
                success: function (data) {
                    var sch = JSON.parse(data);
                    console.log(sch);
                    var $el = $(".TopicIdDDL");
                    $el.empty();

                    if (sch.length > 0) {
                        $el.append($("<option></option>")
                            .attr("value", "").text('Select Topic'));
                        for (i = 0; i < sch.length; i++) {

                            $el.append($("<option></option>")
                                .attr("value", sch[i].Id).text(sch[i].Name));
                        }
                    }
                    else {
                        $el.append($("<option></option>")
                            .attr("value", '').text('Select'));
                    }
                    $('#TopicID option[value="' + TopicIdForLesson + '"]').prop('selected', true);

                }
            });

        }

        var Id = $("#Id").val();




        $('#ClassID').change(function () {

            var ClassId = $(this).val();

            if (ClassId != "") {

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/SectionByClasses?ClassId=" + ClassId,
                    processData: false,
                    contentType: false,
                    success: function (data) {

                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $(".SubIdDDL");
                        $el.empty();
                        var $e3 = $(".TopicIdDDL");
                        $e3.empty();

                        var $e4 = $("#SectionID");
                        $e4.empty();

                        if (sch.length > 0) {
                            $e4.append($("<option></option>")
                                .attr("value", "").text('Select Section'));
                            for (i = 0; i < sch.length; i++) {

                                $e4.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $e4.append($("<option></option>")
                                .attr("value", '').text('Select Section'));
                        }
                    }
                });
            }

            else {

                var $el = $(".SubIdDDL");
                $el.empty();
                var $e3 = $(".TopicIdDDL");
                $e3.empty();

                var $e4 = $("#SectionID");
                $e4.empty();


            }

        });
        $('#SectionID').change(function () {

            var SectionId = $(this).val();
            //Class = UserName;

            if (SectionId != "") {

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/SubjectsByClass?SectionId=" + SectionId,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $(".SubId");
                        $el.empty();
                        var $e3 = $(".TopicIdDDL");
                        $e3.empty();


                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Subject'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select Subject'));
                        }
                    }
                });
            }

            else {

                var $el = $("#SubId");
                $el.empty();
                var $e3 = $(".TopicIdDDL");
                $e3.empty();
                var $e4 = $("#SubjectID");
                $e4.empty();
                SubjectID

            }

        });



        $('#SubjectID').change(function () {

            var ClassId = $("#ClassID").val();
            var SectionId = $("#SectionID").val();
            var SubjectId = $(this).val();

            if (SubjectId != "" && ClassId != "") {

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "/AspNetProject/GetSubjectsForLessonPlan?ClassId=" + ClassId + "&&SubjectId=" + SubjectId + "&&SectionId=" + SectionId,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        var sch = JSON.parse(data);
                        console.log(sch);
                        var $el = $(".TopicIdDDL");
                        $el.empty();

                        if (sch.length > 0) {
                            $el.append($("<option></option>")
                                .attr("value", "").text('Select Topic'));
                            for (i = 0; i < sch.length; i++) {

                                $el.append($("<option></option>")
                                    .attr("value", sch[i].Id).text(sch[i].Name));
                            }
                        }
                        else {
                            $el.append($("<option></option>")
                                .attr("value", '').text('Select'));
                        }
                    }
                });

            }
            else {

                var $el = $(".TopicIdDDL");
                $el.empty();

            }

        });


        $("#btnCancel").click(function () {
            window.location.href = "/AspnetSubjectTopics/ViewTopicsAndLessons";
        })

        $('input[type="file"]').change(function (e) {
            //var fileName = e.target.files[0].name;
            //document.getElementById("FilePath").placeholder = fileName;

            var fileName = e.target.files[0].name;
            var fileUpload = $("#SubmitAssignment").get(0).files;

            var fruits = [];
            if (fileUpload.length > 0) {

                for (var i = 0; i < fileUpload.length; i++) {
                    fruits.push(fileUpload[i].name + " , ");
                }
            }

            $("#SelectedFiles").html(fruits);
            document.getElementById("FilePath").placeholder = "";
        });



    })//end of document ready




</script>


<style>
    .help-block {
        color: red;
    }

    .page-sidebar .page-sidebar-menu, .page-sidebar-closed.page-sidebar-fixed .page-sidebar:hover .page-sidebar-menu {
        list-style: none;
        margin: 0;
        padding: 0;
        height: 2500px !important;
    }

    textarea {
        width: 400px;
        height: 200px;
    }
</style>

<form id="tab2Form">

    <div class="row">
        <div class="col-md-12">
            <div class="card">

                <span id="GenericError" style="color:red;"></span>

                <div class="card-body p-5">

                    <!-- One "tab" for each step in the form: -->
                    <div class="tab">
                        <h2 class="column-heading wizard-heading mb-4">Lesson Plan Basic Info*</h2>
                        <div class="row">
                            <div class="col-md-6 leftCol">
                                <input type="text" class="form-control round-border Floating_text" id="Id" name="Id" value="@ViewBag.ID" hidden></input>
                                <input type="text" class="form-control round-border Floating_text" id="SectionId" name="SectionId" value="@ViewBag.SectionID" hidden></input>

                                <input type="text" class="form-control round-border Floating_text" id="ClassId" name="ClassId" value="@ViewBag.ClassID" hidden></input>
                                <input type="text" class="form-control round-border Floating_text" id="TopicId" name="ClassId" value="@ViewBag.TopicID" hidden></input>
                                <input type="text" class="form-control round-border Floating_text" id="SubjectId" name="ClassId" value="@ViewBag.SubjectID" hidden></input>
                                <input type="text" class="form-control round-border Floating_text" id="WeekVal" name="WeekVal" value="@Model.Week" hidden></input>

                                <input type="text" class="form-control round-border Floating_text" id="UserRole" name="UserRole" value="@ViewBag.UserRole" hidden></input>
                                <input type="text" class="form-control round-border Floating_text" id="WeekVal" name="WeekVal" value="@Model.Week" hidden></input>
                                <input type="text" class="form-control round-border Floating_text" id="ClassName" name="ClassName" value="@ViewBag.ClassName" hidden></input>
                                <input type="text" class="form-control round-border Floating_text" id="SubjectName" name="SubjectName" value="@ViewBag.SubjectName" hidden></input>
                                <input type="text" class="form-control round-border Floating_text" id="SectionName" name="SectionName" value="@ViewBag.SectionName" hidden></input>
                                <input type="text" class="form-control round-border Floating_text" id="TopicName" name="TopicName" value="@ViewBag.TopicName" hidden></input>

                                <input type="hidden" name="CreatedBy" id="CreatedBy" value="@Model.CreatedBy" />
                                <input type="hidden" name="CreationDate" id="CreationDate" value="@Model.CreationDate" />

                                <div class="form-group col-md-12 bmd-form-group">
                                    <label class="bmd-label-floating" style="background: white;margin-left: 0.5rem;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Select Class<span class="red-mark">*</span> </label>

                                    <select class="form-control round-border Floating_text" id="ClassID" name="ClassID" required></select>

                                </div>
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label class="bmd-label-floating" style="background: white;margin-left: 0.5rem;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Select Section<span class="red-mark">*</span> </label>

                                    <select class="form-control round-border Floating_text" id="SectionID" name="SectionID" required></select>

                                </div>
                                <div class="form-group col-md-12 bmd-form-group">
                                    <label class="bmd-label-floating" style="background: white;margin-left: 0.5rem;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Select Week<span class="red-mark">*</span> </label>

                                    <select class="form-control round-border Floating_text" id="Week" name="Week" value="@Model.Week" required>
                                        
                                        <option value="">Select One</option>
                                        <option value="1">1</option>
                                        <option value="2">2</option>
                                        <option value="3">3</option>
                                        <option value="4">4</option>
                                        <option value="5">5</option>
                                        <option value="6">6</option>
                                        <option value="7">7</option>
                                        <option value="8">8</option>
                                        <option value="9">9</option>
                                        <option value="10">10</option>
                                        <option value="11">11</option>
                                        <option value="12">12</option>
                                        <option value="13">13</option>
                                        <option value="14">14</option>
                                        <option value="15">15</option>
                                        <option value="16">16</option>
                                        <option value="17">17</option>
                                        <option value="18">18</option>
                                        <option value="19">19</option>
                                        <option value="20">20</option>
                                        <option value="21">21</option>
                                        <option value="22">22</option>
                                        <option value="23">23</option>
                                        <option value="24">24</option>
                                        <option value="25">25</option>
                                        <option value="26">26</option>

                                    </select>
                                </div>
                                @*<div class="form-group col-md-12 bmd-form-group">
                                        <label class="bmd-label-floating" style="background: white;margin-left: 0.5rem;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Select Chapter<span class="red-mark">*</span> </label>
                                        <input value="@Model.Chapter" type="text" class="form-control round-border Floating_text" id="Chapter" name="Chapter"></input>
                                    </div>*@

                                <div class="form-group col-md-12 bmd-form-group">
                                    <div class="file-field d-flex">
                                        <div class="btn btn-primary btn-md mb-0">
                                            <span style="color:white" onclick='event.stopPropagation(); document.getElementById("SubmitAssignment").click();'>Choose files</span>
                                            <input type="file" class="multiple" name="files" id="SubmitAssignment" multiple />
                                        </div>

                                        <div class="file-path-wrapper d-flex align-items-end ml-3 w-100">
                                            <input id="FilePath" class="file-path validate form-control" type="text" readonly disabled placeholder="No file Chosen">
                                        </div>
                                    </div>
                                    <div style="color: #afbccc;font-size: 14px;font-weight: 500;" class="my-3">Max: 32 MB (Filename should be unique)</div>
                                    <div style="color: #afbccc;font-size: 14px;font-weight: 500;" class="my-3" id="SelectedFiles">
                                        @if (Model.LessonPlanAttachments != null)
                                        {

                                            foreach(var attachment in   Model.LessonPlanAttachments.Split('/').ToList())
                                            {

                                                <br>
                                                <a style="color:blue;text-decoration:underline" href="/Teacher/DownloadLessonPlanAttachment?Name=@attachment" >@attachment</a>
                                        
                                        }

                                        }
                                    </div>
                                </div>
                                @*<span id="AssingmentFileToShow"></span>
                                    <span style="color:blue" id="AssignmentMessage"></span>*@



                                <div class="form-group bmd-form-group pt-5">
                                    <label class="bmd-label-floating" style="background: white;margin-left: 0.5rem;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Lesson Objectives</label>
                                    <textarea class="form-control round-border Floating_text" name="LessonObjectives" id="LessonObjectives" rows="6">@Model.LessonObjectives</textarea>
                                </div>

                                <div class="form-group bmd-form-group pt-5">
                                    <label class="bmd-label-floating" style="background: white;margin-left: 0.5rem;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Concepts to be Learnt</label>
                                    <textarea class="form-control round-border Floating_text" name="Concepts_TBL" id="Concepts_TBL" rows="6">@Model.Concepts_TBL</textarea>
                                </div>




                            </div>

                            <div class="col-md-6 pl-5 pr-5 ">




                                <div class="form-row mt-3">
                                    <div class="form-group col-md-12 bmd-form-group">
                                        <label class="bmd-label-floating" style="background: white;margin-left: 0.5rem;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Select Subject <span class="red-mark">*</span> </label>
                                        <select class="form-control SubIdDDL round-border Floating_text SubId" id="SubjectID" name="SubjectID" required></select>
                                    </div>
                                </div>



                                <div class="form-row mt-3">
                                    <div class="form-group col-md-12 bmd-form-group">
                                        <label class="bmd-label-floating" style="background: white;margin-left: 0.5rem;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Select Date <span class="red-mark">*</span> </label>
                                        @*<input type="date" name="LessonPlanDate" id="LessonPlanDate" value="@string.Format(" {0:yyyy-MM-dd}", Model.LessonPlanDate)" required class="round-border Floating_text form-control" />*@
                                        @Html.TextBoxFor(m => m.LessonPlanDate, "{0:yyyy-MM-dd}", new { @class = "datefield form-control", @type = "date" })



                                    </div>
                                </div>
                                <div class="form-row mt-3">
                                    <div class="form-group col-md-12 bmd-form-group">
                                        <label class="bmd-label-floating" style="background: white;margin-left: 0.5rem;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Select Topic <span class="red-mark">*</span> </label>

                                        <select class="form-control TopicIdDDL round-border Floating_text TopicIdDDL" id="TopicID" name="TopicID" required></select>
                                    </div>
                                </div>


                                <div class="form-group bmd-form-group pt-5">
                                    <label class="bmd-label-floating" style="background: white;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Duration of Lesson</label>
                                    @*<textarea class="form-control round-border Floating_text" name="Duration_OTL" id="Duration_OTL" rows="6"></textarea>*@
                                    @*<input type="time" name="Duration_OTL" id="Duration_OTL" value="" />*@


                                    @*@Html.TextBoxFor(m => m.Duration_OTL, "{0:HH:mm:ss}", new { @class = "datefield form-control", @type = "time" })*@

                                    <input type="number" id="Duration_OTL" min="0" max="120" value="@Model.Duration_OTL" onkeydown="return false" class="form-control round-border Floating_text" name="Duration_OTL" />


                                </div>

                                <div class="form-group bmd-form-group pt-5">
                                    <label class="bmd-label-floating" style="background: white;margin-left: 0.5rem;border-left: 4px solid white;border-right: 4px solid white;transform: translateY(-1.75rem);top: 1.3rem;color: #AAAAAA;">Preperation Prior to Lesson</label>
                                    <textarea class="form-control round-border Floating_text" name="Prep_PTL" id="Prep_PTL" rows="6">@Model.Prep_PTL</textarea>
                                </div>




                            </div>
                        </div>

                        <table class="table table-hover" style="border-radius: 15px; border: 1px solid lightgrey; ">
                            <thead style="background-color: #28BBE5">
                                <tr>
                                    <th><b>How lesson may be carried out</b></th>
                                    <th><b>Resource</b></th>
                                    <th><b>Duration</b></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <label>Starter:</label>
                                        <textarea class="form-control round-border Floating_text" name="Starter" id="Starter" rows="6">@Model.Starter</textarea>
                                    </td>
                                    <td>
                                        <label> </label>
                                        <textarea class="form-control round-border Floating_text" name="R_Starter" id="R_Starter" rows="6">@Model.R_Starter</textarea>
                                    </td>
                                    <td>


                                        @*<input type="time" value="@string.Format(" {0:yyyy-MM-ddTHH:mm:ss}", Model.D_Starter)" name="D_Starter" id="D_Starter" class="round-border Floating_text form-control" />*@

                                        @*@Html.TextBoxFor(m => m.D_Starter, "{0:HH:mm:ss}", new { @class = "datefield form-control", @type = "time" })*@

                                        <input type="number" id="D_Starter" min="0" max="120" value="@Model.D_Starter" onkeydown="return false" class="form-control round-border Floating_text" name="D_Starter" />


                                    </td>
                                </tr>

                                <tr>

                                    <td>
                                        <label>Explanation:</label>
                                        <textarea class="form-control round-border Floating_text" name="Explanation" id="Explanation" rows="6">@Model.Explanation</textarea>
                                    </td>
                                    <td>
                                        <label> </label>
                                        <textarea class="form-control round-border Floating_text" name="R_Explanation" id="R_Explanation" rows="6">@Model.R_Explanation</textarea>
                                    </td>
                                    <td>
                                        @*<input type="time" value="@string.Format(" {0:yyyy-MM-ddTHH:mm:ss}", Model.D_Explanation)" name="D_Explanation" id="D_Explanation" class="round-border Floating_text form-control" />*@

                                        @*@Html.TextBoxFor(m => m.D_Explanation, "{0:HH:mm:ss}", new { @class = "datefield form-control", @type = "time" })*@

                                        <input type="number" id="D_Explanation" min="0" max="120" value="@Model.D_Explanation" onkeydown="return false" class="form-control round-border Floating_text" name="D_Explanation" />


                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>Interaction with the students:</label>
                                        <textarea class="form-control round-border Floating_text" name="Interaction" id="Interaction" rows="6">@Model.Interaction</textarea>
                                    </td>
                                    <td>
                                        <label> </label>
                                        <textarea class="form-control round-border Floating_text" name="R_Interaction" id="R_Interaction" rows="6">@Model.R_Interaction</textarea>
                                    </td>
                                    <td>
                                        @*<input type="time" value="@string.Format(" {0:yyyy-MM-ddTHH:mm:ss}", Model.D_Interaction)" name="D_Interaction" id="D_Interaction" value="" class="round-border Floating_text form-control" />*@

                                        @*@Html.TextBoxFor(m => m.D_Interaction, "{0:HH:mm:ss}", new { @class = "datefield form-control", @type = "time" })*@

                                        <input type="number" id="D_Interaction" min="0" max="120" value="@Model.D_Interaction" onkeydown="return false" class="form-control round-border Floating_text" name="D_Interaction" />

                                    </td>
                                </tr>
                                <tr>
                                    <td>

                                        <label>Practice:</label>
                                        <textarea class="form-control round-border Floating_text" name="Practice" id="Practice" rows="6">@Model.Practice</textarea>
                                    </td>
                                    <td>
                                        <label> </label>
                                        <textarea class="form-control round-border Floating_text" name="R_Practice" id="R_Practice" rows="6">@Model.R_Practice</textarea>
                                    </td>
                                    <td>
                                        @*<input type="time" value="@string.Format(" {0:yyyy-MM-ddTHH:mm:ss}", Model.D_Practice)" name="D_Practice" id="D_Practice" class="round-border Floating_text form-control" />*@

                                        @*@Html.TextBoxFor(m => m.D_Practice, "{0:HH:mm:ss}", new { @class = "datefield form-control", @type = "time" })*@



                                        <input type="number" id="D_Practice" min="0" max="120" value="@Model.D_Practice" onkeydown="return false" class="form-control round-border Floating_text" name="D_Practice" />

                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>Conclusion of the Lesson:</label>

                                        <textarea class="form-control round-border Floating_text" name="Conclusion" id="Conclusion" rows="6">@Model.Conclusion</textarea>
                                    </td>
                                    <td>
                                        <label> </label>
                                        <textarea class="form-control round-border Floating_text" name="R_Conclusion" id="R_Conclusion" rows="6">@Model.R_Conclusion</textarea>
                                    </td>
                                    <td>
                                        @*<input type="time" value="@string.Format(" {0:yyyy-MM-ddTHH:mm:ss}", Model.D_Conclusion)" name="D_Conclusion" id="D_Conclusion" class="round-border Floating_text form-control" />*@

                                        @*@Html.TextBoxFor(m => m.D_Conclusion, "{0:HH:mm:ss}", new { @class = "datefield form-control", @type = "time" })*@

                                        <input type="number" id="D_Conclusion" min="0" max="120" value="@Model.D_Conclusion" onkeydown="return false" class="form-control round-border Floating_text" name="D_Conclusion" />

                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>Evaluation:</label>
                                        <textarea class="form-control round-border Floating_text" name="Evaluation" id="Evaluation" rows="6">@Model.Evaluation</textarea>
                                    </td>
                                    <td>
                                        <label> </label>
                                        <textarea class="form-control round-border Floating_text" name="R_Evaluation" id="R_Evaluation" rows="6">@Model.R_Evaluation</textarea>
                                    </td>
                                    <td>
                                        @*<input type="time" value="@string.Format(" {0:yyyy-MM-ddTHH:mm:ss}", Model.D_Evaluation)" name="D_Evaluation" id="D_Evaluation" value="@Model.D_Evaluation" class="round-border Floating_text form-control" />*@

                                        @*@Html.TextBoxFor(m => m.D_Evaluation, "{0:HH:mm:ss}", new { @class = "datefield form-control", @type = "time" })*@

                                        <input type="number" id="D_Evaluation" min="0" max="120" value="@Model.D_Evaluation" onkeydown="return false" class="form-control round-border Floating_text" name="D_Evaluation" />

                                    </td>
                                </tr>
                                <tr>
                                    <td>

                                        <label>Follow- up/ Extension activities:</label>
                                        <textarea class="form-control round-border Floating_text" name="Followup" id="Followup" rows="6">@Model.Followup</textarea>
                                    </td>
                                    <td>
                                        <label> </label>
                                        <textarea class="form-control round-border Floating_text" name="R_Followup" id="R_Followup" rows="6">@Model.R_Followup</textarea>
                                    </td>
                                    <td>
                                        @*<input type="time" name="D_Followup" id="D_Followup" value="@string.Format(" {0:yyyy-MM-ddTHH:mm:ss}", Model.D_Followup)" class="round-border Floating_text form-control" />*@

                                        @*@Html.TextBoxFor(m => m.D_Followup, "{0:HH:mm:ss}", new { @class = "datefield form-control", @type = "time" })*@

                                        <input type="number" id="D_Followup" min="0" max="120" value="@Model.D_Followup" onkeydown="return false" class="form-control round-border Floating_text" name="D_Followup" />


                                    </td>
                                </tr>

                            </tbody>
                        </table>



                    </div>

                    <button onclick="window.location.href = '/Teacher/LessonPlanList'" type="button" id="1btnCancel" class="btn btn-primary rounded rounded-lg bg-transparent text-muted shadow-none mr-3" style="float: right;">
                        <i class="material-icons mr-2">cached</i>  Cancel
                    </button>
                    @if (User.IsInRole("Teacher"))
                    {
                        <input type="submit" name="name" value="Update" class=" btn btn-primary rounded rounded-lg" style="float: right;" />
                    }
                    @if (User.IsInRole("Branch_Admin"))
                    {
                        <input type="button" id="Publish" name="Publish" value="Publish" class=" btn btn-primary rounded rounded-lg" style="float: right;" />
                    }
                </div>
            </div>
        </div>
    </div>

</form>


<script>

    $(document).ready(function () {


        $("#Publish").click(function () {
            var id = $("#Id").val();

            window.location.href = "/Teacher/PublishLesson?id=" + id;
        })

        $('#tab2Form').validate({ // initialize the plugin
            rules: {
                ClassId1: {
                    required: true,
                },

            },
            submitHandler: function (form) {

                $("#Update").prop("disabled", true);
                debugger
                //  var data = $("#tab2Form").serialize();

                var data = new FormData();

                var form_data = $('#tab2Form').serializeArray();
                $.each(form_data, function (key, input) {
                    data.append(input.name, input.value);
                });

                var fileUpload = $("#SubmitAssignment").get(0).files;
                for (var i = 0; i < fileUpload.length; i++) {
                    data.append("files", fileUpload[i]);
                }
                data.append('key', 'value');

                $.ajax({
                    type: "post",
                    url: "/Teacher/EditLessonPlans",
                    dataType: "JSON",
                    contentType: false,
                    processData: false,
                    data: data, //{ 'BranchId': BranchId, 'ClassId': ClassId, 'SectionId': SectionId, 'MonthId': MonthId, 'DueDate': DueDate },

                    success: function (data) {

                        window.location.href = "/Teacher/LessonPlanList";
                    }
                    ,
                    error: function (e) {

                        debugger
                        alert("error");
                    }
                })

            }

        })


    });




</script>
